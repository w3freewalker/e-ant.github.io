{"meta":{"title":"蚂蚁窝","subtitle":"▄︻┻┳═一在宇宙中留下你的足迹一═┳┻︻▄","description":"","author":"一只蚂蚁","url":"http://blog.e-ant.cn","root":"/"},"pages":[{"title":"所有分类","date":"2020-04-24T01:39:18.000Z","updated":"2020-04-24T14:18:59.583Z","comments":true,"path":"categories/index.html","permalink":"http://blog.e-ant.cn/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-04-24T01:34:03.000Z","updated":"2020-04-24T14:18:48.959Z","comments":true,"path":"tags/index.html","permalink":"http://blog.e-ant.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"阿里云CentOS7+Nginx+Nodejs+Hexo搭建个人静态博客","slug":"常用工具/hexo/hexo-blog-build","date":"2020-04-23T12:35:03.000Z","updated":"2020-04-25T09:40:28.793Z","comments":true,"path":"2020/04/23/常用工具/hexo/hexo-blog-build/","link":"","permalink":"http://blog.e-ant.cn/2020/04/23/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/hexo/hexo-blog-build/","excerpt":"写在前面2010年左右，有用当时很火的CSDN写过一阵子的博客，后来由于工作的关系，自己也懒，就一直没有更新，然后17年左右有一天突然想起来，想登录上去，发现账号密码已经丢了，折腾了很久，愣是没找回来。最近时间相对比较充裕些，就希望写些文字对自己的知识体系做下梳理记录，有个自己的博客，可以随意DIY，还是比较方便些。刚好自己名下有一台闲置的阿里云ECS服务器，度娘了一圈，发现Hexo静态博客依赖少(仅依赖node)、易部署、占用资源小、响应快、模版多、Markdown深度支持等优点，最重要的，是对程序员友好，可折腾空间大，于是有了这个博客。以下是对搭建Hexo博客过程的一个记录。","text":"写在前面2010年左右，有用当时很火的CSDN写过一阵子的博客，后来由于工作的关系，自己也懒，就一直没有更新，然后17年左右有一天突然想起来，想登录上去，发现账号密码已经丢了，折腾了很久，愣是没找回来。最近时间相对比较充裕些，就希望写些文字对自己的知识体系做下梳理记录，有个自己的博客，可以随意DIY，还是比较方便些。刚好自己名下有一台闲置的阿里云ECS服务器，度娘了一圈，发现Hexo静态博客依赖少(仅依赖node)、易部署、占用资源小、响应快、模版多、Markdown深度支持等优点，最重要的，是对程序员友好，可折腾空间大，于是有了这个博客。以下是对搭建Hexo博客过程的一个记录。 环境要求本地环境Windows10(64位)、Git、Nodejs、Hexo 阿里云环境阿里云ECS(Centos7.4 X64)、宝塔、Nginx、Git、Nodejs、Hexo 通过Git实现自动化部署到云服务器上。 开始安装本地WIN10搭建1. 安装Git安装过程自行百度。 安装完成后，配置git全局账号信息： 12git config --global user.email 'you@email.com'git config --global user.name \"your name\" 需要再生成ssh公钥，方便后面自动化部署到云服务器上： 在win10任意地方，右键，点击Git Bash Here打开命令行终端，执行如下命令： 1ssh-keygen -t rsa 生成的文件默认放在c:\\用户\\你自己的用户名.ssh\\目录下。 2 安装Nodejs网上下载最新版本的Nodejs，下载后直接安装即可，安装完成后打开cmd，输入node -v及npm -v，能成功输出版本号信息，就说明成功安装完Nodejs。 3 安装 Hexo新建一个目录，建议不要放在C盘下，比如我的是D:\\hexo-blog\\myblog，打开cmd，cd到这个目录下，运行以下命令： 123456cd d:\\nexo-blog\\myblognpm install hexo-cli -ghexo initnpm install# 启动博客本地访问hexo server 上述如果一切正常，会将hexo博客发布到http://localhost:4000下，打开即可看到。 4 Hexo基本配置博客搭建好了，总得把博客修改成自己的内容吧，进入到打开myblog/_config.yml文件（此文件为hexo的全局配置文件，不同于下面要提到的主题中的同名文件） 12345678# Sitetitle: 网站名称subtitle: '' #子标题description: '' #网站描述keywords: # 关键字author: #作者language: zh-CN #语言,这个表示中文，根据主题的支持项进行配置，具体每个主师支持哪些语言，可以参见themes/主题名/language文件夹下罗列的文件名称timezone: '' # 时区，中国可以填'Asia/ShangHai' 5 配置Next主题hexo-next主题被认为是比较好看好用的主题，我个人也是比较中意，以下介绍下配置过程 进入到myblog目录下，可以看到一个themes文件夹，这个就是存放所有主题的地方，我们先把next主题拉到本地： 1git clone https://github.com/iissnan/hexo-theme-next.git themes/next 打开themes/next下的_config.yml文件，修改其中的部份内容，Schemes为网站风格样式，menu为菜单列表 12345678910111213141516171819202122232425262728293031# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini# Dark Modedarkmode: true# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# Usage: `Key: /link/ || icon`# Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.# Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.# When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).# External url should start with http:// or https://menu: home: / || fa fa-home #about: /about/ || fa fa-user tags: /tags/ || fa fa-tags categories: /categories/ || fa fa-th archives: /archives/ || fa fa-archive #schedule: /schedule/ || fa fa-calendar #sitemap: /sitemap.xml || fa fa-sitemap #commonweal: /404/ || fa fa-heartbeat 其中，菜单默认是只有home及archives，其它几个视自己需要自行添加，添加方法如下： 创建tags 12cd d:\\nexo-blog\\mybloghexo new page \"tags\" 此时，系统会在myblog\\source下创建一个tags的文件夹以下文件夹下的index.md文件，打开该文件，编辑，添加type为tags 12345---title: All tagsdate: 2019-04-24 09:34:03type: \"tags\"--- 创建categories 12cd d:\\nexo-blog\\mybloghexo new page \"categories\" 此时，系统会在myblog\\source下创建一个categories的文件夹以下文件夹下的index.md文件，打开该文件，编辑，添加type为tags 12345---title: categoriesdate: 2019-04-24 09:34:03type: \"categories\"---- 回到myblog目录下，我们需要修改一下全局的_config.yml中的主题配置项，将刚才的next主题配置进去，注意名称与themes下的目录名一定要一致，不然不会生效： 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next 这样，next主题就算配置完成了。hexo server重启一下服务，就可以看到效果了。 阿里云CentOS环境搭建1. git安装配置安装git 1yum install git 创建git账户、添加权限 123adduser gitchmod 740 /etc/sudoersvim /etc/sudoers 找到以下内容，并参照添加 1234## Allow root to run any commands anywhereroot ALL=(ALL) ALL#添加此行--git权限git ALL=(ALL) ALL 保存退出并改回权限 1chmod 400 /etc/sudoers 设置git账户密码 1sudo passwd git 切换至git用户，创建/.ssh文件夹和/.ssh/authorized_keys文件，并赋予相应的权限 123456su gitmkdir ~/.sshvim ~/.ssh/authorized_keys# 将win10中生成的公钥id_rsa.pub文件中的内容复制到authorized_keys中,保存并退出chmod 600 /home/git/.ssh/authorized_keyschmod 700 /home/git/.ssh 本地终端添加免密登录git用户至云服务器，在本地win10上执行以下命令后输入yes，后续只要再执行下面这条命令，就可以直接免密登录到云服务器，如下： 1ssh -v git@服务器公网IP或服务器域名 云服务器切换回root账户，并执行以下命令，创建相应的账户 12345678# /var/repo为git的仓库目录mkdir /var/repochown -R git:git /var/repochmod -R 755 /var/repo# /var/www/hexo作为网站的根目录mkdir /var/www/hexochown -R git:git /var/www/hexochmod -R 755 /var/www/hexo 创建一个空的Git仓库(myblog.git可以自己定义，注意需要与WIN10配置自动化部署时写的名称一致) 12cd /var/repogit init --bare myblog.git 创建一个新的Git钩子，用于自动化部署 在/var/repo/myblog.git下，有一个自动生成的hooks文件夹，我们需要在这里新建一个钩子文件post-receive 1vim /var/repo/myblog.git/hooks/post-receive 进入编辑模式，在该文件中添加以下代码，指定Git的工作树（源代码）和Git目录（配置文件等），保存退出。 12#!/bin/bashgit --work-tree=/var/www/hexo --git-dir=/var/repo/myblog.git checkout -f 添加文件可执行权限 12chown -R git:git /var/repo/myblog.git/hooks/post-receivechmod +x /var/repo/myblog.git/hooks/post-receive 至此，Git仓库及自动化部署算是完全搭建好了。 2. 安装宝塔、选配Nginx其实我之前一直都用lnmp的，不过在试过傻瓜式的宝塔后，就种草了，安装简单、配置方便、易扩展，尤其适合一些小白型用户。以下是安装过程： 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh 默认安装即可，完成安装后，会显示宝塔面板后台的登录地址，账号及密码。 登录宝塔面板后，选配Nginx并点击安装，等待安装完成。 安装完Nginx，接下来就是添加网站，点击网站-&gt;添加站点-&gt;输入域名(无域名可以输入公网IP)-&gt;PHP版本选择【纯静态】，其它默认，提交。然后进一步进入到设置-&gt;配置文件，检查下配置项，修改并保存： 123456789server&#123; # 使用80端口，务必要完成备案才可以 listen 80; # server_name修改为自己的域名 server_name www.xxx.com; index index.php index.html index.htm default.php default.htm default.html; # 网站的根目录 root /var/www/hexo; 3. 启动宝塔服务1service bt restart 配置自动化部署 返回到本地WIN10上，通过配置hexo全局的config.yml文件，实现自动化部署。 _打开本地WIN10上的myblog文件夹，打开_config.yml文件，找到deploy： 1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git # SERVER改为自己的服务器地址，另此处的myblog.git可以自行定义，但需要与下面器配置的名称相对应 repo: git@SERVER:/var/repo/myblog.git branch: master 保存并退出，返回到myblog目录，执行以下命令： 12hexo cleanhexo g -d 没有显示绿色说明完成了，打开浏览器，输入你的域名或IP地址，就可以看到最终的hexo博客了。 至此，一个属于自己的hexo博客的基础功能就都搞定了，其余DIY环节，待后续进一步研究。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Hexo博客搭建","slug":"Hexo博客搭建","permalink":"http://blog.e-ant.cn/tags/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"Next主题","slug":"Next主题","permalink":"http://blog.e-ant.cn/tags/Next%E4%B8%BB%E9%A2%98/"},{"name":"Nginx","slug":"Nginx","permalink":"http://blog.e-ant.cn/tags/Nginx/"}]},{"title":"MySQL数据库定时备份归档脚本","slug":"数据库/mysql/mysql-backup","date":"2020-04-15T05:35:00.000Z","updated":"2020-04-26T11:45:45.017Z","comments":true,"path":"2020/04/15/数据库/mysql/mysql-backup/","link":"","permalink":"http://blog.e-ant.cn/2020/04/15/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql-backup/","excerpt":"前些日子，朋友有个数据库出现问题，为防止后续再次出现异常无法找回数据，就让我帮忙写个数据库的自动定时备份脚本，写完了，我也顺便做个记录。","text":"前些日子，朋友有个数据库出现问题，为防止后续再次出现异常无法找回数据，就让我帮忙写个数据库的自动定时备份脚本，写完了，我也顺便做个记录。 自动备份脚本 在选定目录下编写以下文件（如放置到/home/backshell/scripts文件夹下），并命名为backupDB，内容如下，主要实现功能: 通过mysqldump执行全库备份 删除指定天数之前的历史备份 将最新备份通过FTP上传到指定的备用服务器上 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#! /bin/bash# 数据库参数项USER=数据库用户名PASSWORD=数据库密码DATABASE1=数据库名# 备份文件存放目录BACKUP_DIR=/data/backup/database/# 备份日志LOGFILE=/data/backup/database/data_backup.log# 备份档存放天数KEEPDAY=7# 备份文件命名规则DATE=$(date -d '-1 min' +%Y%m%d-%H%M)DUMPFILE1=$DATE-$DATABASE1.sqlARCHIVE1=$DUMPFILE1.tar.gz# 创建备份目录if [ ! -d $BACKUP_DIR ]; then mkdir -p \"$BACKUP_DIR\" fiecho -e \"\\n\" &gt;&gt; $LOGFILE echo \"------------------------------------\" &gt;&gt; $LOGFILE echo \"BACKUP DATE:$DATE\"&gt;&gt; $LOGFILE echo \"------------------------------------\" &gt;&gt; $LOGFILE# 执行备份echo $BACKUP_DIR /usr/bin/mysqldump -u$USER -p$PASSWORD $DATABASE1 &gt; $DUMPFILE1if [[ $? == 0 ]]; then tar czvf $ARCHIVE1 $DUMPFILE1 &gt;&gt; $LOGFILE 2&gt;&amp;1 echo \"$ARCHIVE1 BACKUP SUCCESSFUL!\" &gt;&gt; $LOGFILE mv $ARCHIVE1 $BACKUP_DIRrm -f $DUMPFILE1 else echo “$ARCHIVE1 Backup Fail!” &gt;&gt; $LOGFILE fi# 删除KEYPDAY之前的备份档,节省空间find $BACKUP_DIR -type f -mtime +$KEEPDAY -exec rm -f &#123;&#125; \\;echo \"$KEEPDAY DAYS AGO FILES HAS BEEN DELETE!\" &gt;&gt; $LOGFILE # 将备份档通过FTP传送到远程备份服务器# 以下[SERVERIP]、[USER]、[password]替换为实际的远程服务器#ftp -n&lt;&lt;!#open [SERVERIP]#user USER PASSWORD#binary#cd /www/wwwroot/backdir/#lcd $BACKUP_DIR#prompt#put $ARCHIVE1#close#bye#! 修改定时任务脚本，使备份自动定时执行： 打开/etc/crontab文件，修改如下（添加最后一行）： 123456789101112131415SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root# For details see man 4 crontabs# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed05 00 * * * root /home/bakshell/script/backupDB #每天凌晨0点01分执行数据库备份脚本 加密处理由于上述脚本中存在明文的账号密码等信息，存在一定的安全隐患，对 shell脚本进行加密就很必要了，下面用一种最简单的方式，gzexe工具。 1234# 加密gzexe backupDB# 解密gzexe -d backupDB 加密之后，会在同级目录生成一个~backpuDB的文件，该文件是原始的文件，而backupDB会被加密成密文件文件，打开会是一系列打乱后的编码。可以将~backupDB文件删除。这样可以应付一般的安全性需要了。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"},{"name":"定时备份","slug":"定时备份","permalink":"http://blog.e-ant.cn/tags/%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD/"},{"name":"shell","slug":"shell","permalink":"http://blog.e-ant.cn/tags/shell/"}]},{"title":"Sonatype Nexus版本库升级方案","slug":"常用工具/maven/nexus-update","date":"2018-02-15T03:32:00.000Z","updated":"2020-04-26T11:49:12.544Z","comments":true,"path":"2018/02/15/常用工具/maven/nexus-update/","link":"","permalink":"http://blog.e-ant.cn/2018/02/15/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/maven/nexus-update/","excerpt":"Sonatype Nexus版本库升级 下载免费的最新版本Sonatpte Nexus 安装JDK1.7.0_80 安装Tomcat7 配置/etc/profile，修改其中的JAVA_HOME及CATALINA_HOME配置，source /etc/profile立即生效","text":"Sonatype Nexus版本库升级 下载免费的最新版本Sonatpte Nexus 安装JDK1.7.0_80 安装Tomcat7 配置/etc/profile，修改其中的JAVA_HOME及CATALINA_HOME配置，source /etc/profile立即生效 如原来已经安装了Nexus，注意将/root/sonatype-work/nexus下的文件做个全量备份。 解压缩nexus-2.14.1-01-bundle.tar.gz nexus-2.14.1-01/lib目录下除javax..jar及jetty-.jar以外的jar包，复制到nexus-2.14.1-01/nexus/WEB-INF/lib目录下 再将nexus-2.14.1-01/nexus目录copy至tomcat7的webapps目录下 启动Tomcat7 Sonatype Nexus管理员密码丢失 Xshell连接上Nexus所在的服务器 通过find / -name &#39;security.xml&#39;命令，找到security.xml文件所在的目录 vim security.xml 编辑该文件，将anonymous用户的权限改为admin，保存。 找到nexus的tomcat启动目录，并重启nexus的tomcat服务。 1234567891011121314151617&lt;userRoleMapping&gt; &lt;userId&gt;anonymous&lt;/userId&gt; &lt;source&gt;default&lt;/source&gt; &lt;roles&gt; &lt;role&gt;anonymous&lt;/role&gt; &lt;role&gt;repository-any-read&lt;/role&gt; &lt;!--添加该项--&gt; &lt;role&gt;nx-admin&lt;/role&gt; &lt;/roles&gt;&lt;/userRoleMapping&gt;&lt;userRoleMapping&gt; &lt;userId&gt;admin&lt;/userId&gt; &lt;source&gt;default&lt;/source&gt; &lt;roles&gt; &lt;role&gt;nx-admin&lt;/role&gt; &lt;/roles&gt;&lt;/userRoleMapping&gt; 此时访问nexus首页，左侧看到的就是管理员的所有菜单。 找到Security－＞Users－＞admin右键-&gt;Set Password，重新设置一个admin用户的密码。 将原改动的security.xml文件还原，再次重新nexus的tomcat服务，此前就可以用admin账号的新密码重新正常登录了。 附：Linux环境下搭建Maven个人私服参考来源： http://www.tuicool.com/articles/E7ZBv2 http://my.oschina.net/stevenleesmart/blog/160515 http://blog.csdn.net/wang379275614/article/details/43940259 nexus下载地址（此处选用Nexus 2.11.4-01版本）：http://www.sonatype.org/nexus/archived/#step2top 需jdk1.7版本（此处选用jdk-7u80-linux-x64.tar.g版本）：http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Nexus","slug":"Nexus","permalink":"http://blog.e-ant.cn/tags/Nexus/"},{"name":"版本升级","slug":"版本升级","permalink":"http://blog.e-ant.cn/tags/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"},{"name":"Maven私服","slug":"Maven私服","permalink":"http://blog.e-ant.cn/tags/Maven%E7%A7%81%E6%9C%8D/"}]},{"title":"CSVN(CollabNet Subversion)管理员密码忘记解决方案","slug":"常用工具/csvn/csvn-forgetpwd","date":"2017-03-18T07:32:00.000Z","updated":"2020-04-26T11:55:16.022Z","comments":true,"path":"2017/03/18/常用工具/csvn/csvn-forgetpwd/","link":"","permalink":"http://blog.e-ant.cn/2017/03/18/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/csvn/csvn-forgetpwd/","excerpt":"如管理员密码忘记，重置方法如下（前提是知道任意一个普通用户的密码）： 说明：CSVN采用的是hsqldb的数据库，没有数据库实体，而是直接写入到内存中的。","text":"如管理员密码忘记，重置方法如下（前提是知道任意一个普通用户的密码）： 说明：CSVN采用的是hsqldb的数据库，没有数据库实体，而是直接写入到内存中的。 找到csvn安装目录，如: /home/csvn下，请严格按以下步骤进行： 执行./bin/csvn stop 先关闭csvn服务 备份/data/csvn-production-hsqldb.script文件 修改/data/csvn-production-hsqldb.script文件，找到INSERT INTO ROLE_PEOPLE VALUES(1,1)语句，将你所已知的用户的主键记录，复制一条上面的语句，将后面的1改成你所已知用户对应的id。并覆盖原文件。（此步骤其实就是将你已知的用户授权超级权限）。 重启csvn： ./bin/csvn start 用你已知的用户登录，此时你这个用户就有了管理员权限。再找到用户列表中的admin，更新他的密码即可 保险起见，再用admin登录，把你刚才的用户的管理员权限收回即可。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"CSVN","slug":"CSVN","permalink":"http://blog.e-ant.cn/tags/CSVN/"},{"name":"SVN","slug":"SVN","permalink":"http://blog.e-ant.cn/tags/SVN/"},{"name":"重置密码","slug":"重置密码","permalink":"http://blog.e-ant.cn/tags/%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81/"}]},{"title":"Linux下NFS安装及配置","slug":"常用工具/nfs/nfs-config","date":"2015-08-21T10:35:00.000Z","updated":"2020-04-26T12:03:50.485Z","comments":true,"path":"2015/08/21/常用工具/nfs/nfs-config/","link":"","permalink":"http://blog.e-ant.cn/2015/08/21/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/nfs/nfs-config/","excerpt":"如果没有装NFS服务： 1yum install nfs-utils.x86_64","text":"如果没有装NFS服务： 1yum install nfs-utils.x86_64 创建需要共享的目录，比如/nfs 123mkdir /nfschmod 777 /nfs 配置目录共享（注意括号前没有空格） 123vim /etc/exports #添加下面一行，IP地址改为自己的/nfs 192.168.6.*(rw,sync,no_root_squash) 开机启动 1chkconfig nfs on 修改配置项（server和client端都需要做）： 1vim /etc/idmapd.conf 把以下行取消注释： 1Domain = local.domain.edu 可能需要执行： 1/etc/init.d/rpcidmapd restart 启动服务： 123/etc/init.d/rpcbind start/etc/init.d/nfs start client端： 创建相同的目录，比如/nfs 123mkdir /nfschmod 777 /nfs 修改配置项（server和client端都需要做）： 1vim /etc/idmapd.conf 把以下行取消注释： 1Domain = local.domain.edu 添加开机自动挂载： 123vim /etc/fstab# 添加以下代码，IP地址改为自己的192.168.6.108:/nfs/ /nfs nfs defaults 0 0 开机自动启动相关服务（centos5的启动目录不一样哦）： 1sed -i '$a\\/etc/init.d/rpcidmapd start' /etc/rc.d/rc.local 重启查看目录是否成功挂载上 1[[root@BT1657060](mailto:root@BT1657060) nfs]# df -TH 123456789Filesystem Type Size Used Avail Use% Mounted on/dev/mapper/rootvg-lvroot ext4 94G 5.5G 83G 7% /tmpfs tmpfs 4.2G 0 4.2G 0% /dev/shm/dev/sda1 ext4 102M 37M 61M 38% /boot/dev/mapper/rootvg-lvhome ext4 1.1G 35M 969M 4% /home/dev/mapper/rootvg-lvopt ext4 1.1G 351M 653M 35% /opt/dev/mapper/rootvg-lvtmp ext4 1.1G 35M 969M 4% /tmp/dev/mapper/rootvg-lvvar ext4 2.2G 234M 1.8G 12% /var192.168.6.108:/nfs/ nfs 178G 8.3G 161G 5% /nfs","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"NFS","slug":"NFS","permalink":"http://blog.e-ant.cn/tags/NFS/"}]},{"title":"SSH升级方案【基于CentOS6版本】","slug":"Linux/centos6-ssh-upd","date":"2015-06-23T04:55:00.000Z","updated":"2020-04-25T09:41:00.320Z","comments":true,"path":"2015/06/23/Linux/centos6-ssh-upd/","link":"","permalink":"http://blog.e-ant.cn/2015/06/23/Linux/centos6-ssh-upd/","excerpt":"注意： 以下方案在centos6(查看方法：cat /etc/issue)版本下测试成功，其它版本未验证，谨慎操作。 建议直接在~目录下操作 务必严格按照下述步骤逐步执行 保险起见，以下升级步骤全部完成后，修改一次root密码，改成原来的密码 版本升级后，可以重启下服务器","text":"注意： 以下方案在centos6(查看方法：cat /etc/issue)版本下测试成功，其它版本未验证，谨慎操作。 建议直接在~目录下操作 务必严格按照下述步骤逐步执行 保险起见，以下升级步骤全部完成后，修改一次root密码，改成原来的密码 版本升级后，可以重启下服务器 升级步骤123456789101112cp -rf /etc/ssh /etc/ssh_bak# 以下语句,若出现提示信息时,全部选yyum install gcc openssl-devel pam-devel rpm-buildwget http://mirror.internode.on.net/pub/OpenBSD/OpenSSH/portable/openssh-7.2p2.tar.gztar -zxvf openssh-7.2p2.tar.gzcd openssh-7.2p2./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-zlib --with-md5-passwordsrm -rf /etc/sshmakemake install# 出现提示信息,选ycp contrib/redhat/sshd.init /etc/init.d/sshd 接着： 1vim /etc/ssh/sshd_config 查找PermitRootLogin，改成PermitRootLogin yes 查找#UsePAM no，改成UsePAM yes 12/etc/init.d/sshd reloadchkconfig --list|grep ssh","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"Linux系统","slug":"体系/Linux系统","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/Linux%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"http://blog.e-ant.cn/tags/CentOS/"},{"name":"ssh升级","slug":"ssh升级","permalink":"http://blog.e-ant.cn/tags/ssh%E5%8D%87%E7%BA%A7/"}]},{"title":"MySQL常见问题处理","slug":"数据库/mysql/mysql-faq","date":"2013-06-15T02:30:00.000Z","updated":"2020-04-26T10:56:46.776Z","comments":true,"path":"2013/06/15/数据库/mysql/mysql-faq/","link":"","permalink":"http://blog.e-ant.cn/2013/06/15/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql-faq/","excerpt":"MySQL安装完成后，远程无法访问，报1045错误解决方案： 1234mysql &gt; use mysql;mysql &gt; update user set password&#x3D;PASSWORD(&quot;new password&quot;) WHERE USER&#x3D;&quot;root&quot;;mysql &gt; flush privileges;mysql &gt; update user set host&#x3D;&quot;%&quot; where user&#x3D;&quot;root&quot; and host&#x3D;&quot;localhost&quot;;","text":"MySQL安装完成后，远程无法访问，报1045错误解决方案： 1234mysql &gt; use mysql;mysql &gt; update user set password&#x3D;PASSWORD(&quot;new password&quot;) WHERE USER&#x3D;&quot;root&quot;;mysql &gt; flush privileges;mysql &gt; update user set host&#x3D;&quot;%&quot; where user&#x3D;&quot;root&quot; and host&#x3D;&quot;localhost&quot;; ROOT密码忘记12345678# 输入以下命令,# 表示mysqld_safe进程存在,可以通过以下命令删除$ mysqld_safe --user&#x3D;mysql --skip-grant-tables --skip-networking &amp;# 登录$ mysql -u root mysql# 修改为新的密码mysql&gt; UPDATE user SET password&#x3D;PASSWORD(&quot;new password&quot;) WHERE user&#x3D;&#39;root&#39;;mysql&gt; FLUSH PRIVILEGES; 如果在执行： 1$ mysqld_safe --user&#x3D;mysql --skip-grant-tables --skip-networking &amp; 出现类似mysqld_safe A mysqld process already exists的提示，则可以通过下述命令先停止mysqld_safe进程 1234# 查看mysqld_safe进程IDps -A|grep mysql# 终结该进程,xxxx替换为上面查出来的进程号kill -9 xxxx 设置MySQL随机自启动 确保/etc/rc.d/init.d/mysql存在 若用service mysql start能够正常启动，表示服务已存在(若是通过rpm方式安装的，相应服务会自动在/etc/rc.d/init.d目录注册的) 检查在所有linux运行级别中，系统随机启动服务项的运行状态信息(on 或 off) 1chkconfig --list mysql 若未找到,添加服务 1chkconfig --addd mysql 设置相应运行级别开启随机启动功能 1chkconfig --level 2345 mysql on 重启mysql服务 1service mysql restart rpm方式安装后，让不到/etc/my.cnf的解决方法1cp /usr/share/mysql/my-medium.cnf /etc/my.cnf 查询MySQL中哪些表的数据量最大12mysql &gt; use information_schema; mysql&gt; select table_schema,table_name,table_rows from tables order by table_rows desc limit 10; MySQL錯誤:Value ‘0000-00-00’ can not be represented as java.sql.Date解決方法jsp+Tomcat+Mysql开发中采用ResultSet取值时,不管是采用getString()还是采用getDate(),均会抛出如标题所这样述错误，查阅 是因为日期型(Date或DateTime类型)字串为’000-00-00’时,MySQL预设处理方式是抛出错误(exception).只要将jdbc数据库连接串做如下修改即可: 修改前jdbc连接串为: jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&amp;amp;characterSetResults=UTF-8 修改后jdbc连接串为: jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&amp;amp;characterSetResults=UTF-8&amp;amp;zeroDateTimeBehavior=convertToNull 原文如下： Datetimes with all-zero components (0000-00-00 …) — These values can not be represented reliably in Java. Connector/J 3.0.x always converted them to NULL when being read from a ResultSet.Connector/J 3.1 throws an exception by default when these values are encountered as this is the most correct behavior according to the JDBC and SQL standards. This behavior can be modified using the zeroDateTimeBehavior configuration property. The allowable values are: exception (the default), which throws an SQLException with an SQLState of S1009. convertToNull, which returns NULL instead of the date. round, which rounds the date to the nearest closest value which is 0001-01-01. Starting with Connector/J 3.1.7, ResultSet.getString() can be decoupled from this behavior via noDatetimeStringSync=true (the default value is false) so that you can retrieve the unaltered all-zero value as a String. It should be noted that this also precludes using any time zone conversions, therefore the driver will not allow you to enable noDatetimeStringSync and useTimezone at the same time.","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"},{"name":"FAQ","slug":"FAQ","permalink":"http://blog.e-ant.cn/tags/FAQ/"}]},{"title":"MySQL存储引擎简介","slug":"数据库/mysql/mysql-engine","date":"2010-04-15T12:30:00.000Z","updated":"2020-04-26T10:18:23.811Z","comments":true,"path":"2010/04/15/数据库/mysql/mysql-engine/","link":"","permalink":"http://blog.e-ant.cn/2010/04/15/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql-engine/","excerpt":"MySQL 支持多个存储引擎作为对不同表的类型的处理器,存储引擎有:MyISAM、InnoDB、MEMERY(HEAP)、BDB(BerkeleyDB)、EXAMPLE、FEDERATED、ARCHIVE、CSV、BLACKHOLE.可分为处理事务安全表的引擎和处理非事务安全表的引擎.","text":"MySQL 支持多个存储引擎作为对不同表的类型的处理器,存储引擎有:MyISAM、InnoDB、MEMERY(HEAP)、BDB(BerkeleyDB)、EXAMPLE、FEDERATED、ARCHIVE、CSV、BLACKHOLE.可分为处理事务安全表的引擎和处理非事务安全表的引擎. 一、处理非事务安全表的引擎1.MyISAM:提供高速存储和检索以及全文搜索的功能,是MySQL默认的插件式存储引擎,它在Web、数据仓储和其他应用环境下最常使用的存储引擎之一.通过更改STORAGE_ENGINE配置变量,能够方便地更改MySQL服务器的默认存储引擎.2.MEMORY:提供”内存中”表.已被正式确认为HEAP引擎.将所有数据保存在RAM中,在需要快速查找引用和其他类似数据的环境下,可以提供极快的访问速度.3:MERGE:允许集合将被处理同样的MyISAM表作为一个单独的表.允许MySQL DBA或开发人员将一系列等同的MyISAM表以逻辑方式组合在一起,并作为一个对象引用它们,对于诸如数据仓储等VLDB环境十分适合.4.EXAMPLE:是一个”存根”引擎,可以用这个引擎创建表,但没有数据被存储于其中或从其中检索,这个引擎的目的在于服务.5:NDB Cluster:是被MySQL Cluster用来实现分割到多台计算机的表的存储引擎.它在MySQL-Max5.1二进制分发版里提供.这个存储引擎当前只被Linux,Solaris和Max OS X支持.在未来的MySQL分发版中,也将添加Windows对它的支持.适合于具用高性能查找要求的应用程序,这类查找需求还要求具有最高的正常工作时间可可用性.6:ARCHIVE:用来无索引地,非常小覆盖存储的大量数据.为大量很少引用的历史、归档、或安全审计信息的存储和检索提供了完美的解决方案.7:CVS:把数据以逗号分隔的格式存储在文本文件中.8:BLACKHOLE:接受但不存储数,并且检索总是返回一个空集.9:FEDERATED:所数据存在远程数据库中.在MySQL5.1中,它只和MySQL一起工作,使用MySQL Client API.在未来的分发版中,它将使用其它驱动器或客户端连接方法连接到另外的数据源.能够将多个分离的MySQL服务器连接起来,从多个物理服务器创建一个逻辑数据库.十分适合于分布式环境或数据集市环境. 二、处理事务安全表的引擎1.InnoDB:默认被包含在所有MySQL5.1二进制分发版里,可以通过配置MySQL来允许或禁止任一引擎.用于事务处理应用程序,具有众多特性,包括ACID事务支持.2.BDB(BerkeleyDB):默认被包含在为支持它的操作系统发布的MySQL-Max二进制分发版里.实际应用中可以替代InnoDB的事务引擎,支持Commit,Rollback和其他事务特性. 三、如何更换这些引擎1.全局修改:最简单的方法就是更改服务器配置,直接将其设定成所需要的引擎,在windows下可以通过更改服务器安装目录下的mysql.ini中的default-storage-engine项即可.2.表格修改:还有另外一种更灵活的配置方法,就是按表来设置引擎.这样可能把那些需要用到事务处理的表设置成InnoDB,其他的设置成MyISAM,可将其性能提升到极致,设置方法如下: a.建表时添加扩展语句 Create TABLE A .... ENGINE=InnoDB b.建表后,可以使用Alter语句进行修改:Alter TABEL [表格名] ENGINE=InnoDB; 不清楚当前数据库中各表的引擎时可以使用SHOW TABLE STATUS FROM DBNAME 查看.","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"}]},{"title":"相对完整的软件测试工具手册","slug":"测试/unittest","date":"2010-03-23T11:05:00.000Z","updated":"2020-04-26T10:50:56.122Z","comments":true,"path":"2010/03/23/测试/unittest/","link":"","permalink":"http://blog.e-ant.cn/2010/03/23/%E6%B5%8B%E8%AF%95/unittest/","excerpt":"本文转载自 http://spaces.msn.com/cdyblog/ 【侵删】 1. 从测试功能上分（1） 单元测试针对不同语言，如JUNIT（2） 功级测试E—Test：功能强大，由于不是采用POST URL的方式回放脚本，所以可以支持多内码的测试数据（当然要程序支持），基本上可以应付大部分的WEB SITE。MI公司的WINRUNNERCOMPUWARE的QARUNRATIONAL的SQA ROBOT","text":"本文转载自 http://spaces.msn.com/cdyblog/ 【侵删】 1. 从测试功能上分（1） 单元测试针对不同语言，如JUNIT（2） 功级测试E—Test：功能强大，由于不是采用POST URL的方式回放脚本，所以可以支持多内码的测试数据（当然要程序支持），基本上可以应付大部分的WEB SITE。MI公司的WINRUNNERCOMPUWARE的QARUNRATIONAL的SQA ROBOT （3） 压力测试MI公司的WINLOADCOMPUWARE的QALOADRATIONAL的SQA LOAD（4） 负载测试LOADRUNNERRATIONAL VISUAL QUANTIFY（5） WEB测试工具MI公司的ASTRA系列RSW公司的E—TEST SUITE等（6） WEB系统测试工具WORKBENCHWEB APPLICATION STRESS TOOL（WAS）（7） 数据库测试工具TESTBYTES（8） 回归测试工具RATIONAL TEAM TESTWINRUNNER（9） 嵌入式测试工具ATTOLTESTWARE。是ATTOLTESTWARE公司的自动生成测试代码的软件测试工具，特别适用于嵌入式实时应用软件单元和通信系统测试。CODETEST是AppliedMicrosystemsCorp.公司的产品,是广泛应用的嵌入式软件在线测试工具。GammaRay。GammaRay系列产品主要包括软件逻辑分析仪GammaProfiler、可靠性评测工具GammaRET等。LogiScope是TeleLogic公司的工具套件，用于代码分析、软件测试、覆盖测试。LynxInsure++是LynxREAL-TIMESYSTEMS公司的产品，基于LynxOS的应用代码检测与分析测试工具。MessageMaster是ElviorLtd.公司的产品，测试嵌入式软件系统工具，向环境提供基于消息的接口。VectorCast是VectorSoftware.Inc公司的产品。由6个集成的部件组成，自动生成测试代码，为主机和嵌入式环境构造可执行的测试架构。（10） 系统性能测试工具Rational Performance（11） 页面链接测试Link Sleuth（12） 测试流程管理工具Test Plan Control（13） 测试管理工具TestDirectorRational公司的Test ManagerCompuware公司的QADirectorTestExpert：是Silicon Valley Networks公司产品的测试管理工具，能管理整个测试过程，从测试计划、测试例程、测试执行到测试报告。（14） 缺陷跟踪工具TrackRecord等（15） 其他测试工具包TestVectorGenerationSystem是T—VECTechnologies公司的产品。提供自动模型分析、测试生成、测试覆盖分析和测试执行的完整工具包，具有方便的用户接口和完备的文档支持。TestQuestPro是TestQuest公司的非插入码式的自动操纵测试工具，提供一种高效的自动检测目标系统，获取其输出性能的测试方法。TestWorks是SoftwareResearch.Inc公司的一整套软件测试工具，既可单独使用，也可捆绑销售使用。2、 从测试的方法上分（1） 白盒测试工具白盒测试工主要有：Numega、PuRe、软件纠错工具（Rational Purify）。内存资源泄漏检查：Numega中的BounceChecherRational的 Purify等代码覆盖率检查：Numega的TrueCoverageRational的PureCoverageTeleLogic公司的LogiScopeMacabe公司的Macabe代码性能检查：Numega的TrueTimeRational的Quantify等代码静态度量分析度量检查工具：LogiScope和Macabe等黑盒测试工具主要有：QACenter、SQATeamTest、Rational Visual Visual Test。QACenter：QACenter帮助所有测试人员创建一个快速、可重用的测试过程。这些测试工具自动帮助管理测试过程、快速分析和调试程序，包括针对回归、强度、单元、并发、集成、移植，容量和负载建立测试用例，自动执行测试和产生文档结果。QACenter主要包括以下几个模块：QARun：应用的功能测试工具。QALoad：强负载下应用的性能测试工具。QADirector：测试的组织设计和创建以及管理工具。TrackRecord：集成的缺陷跟踪管理工具。EcoTools：高层次的性能监测工具。 3、部分具体测试工具的介绍（1）、性能优化工具EcoScopeEcoScope 是一套定位于应用（即服务提供者本身）及其所依赖的所有网络计算资源的解决方案。EcoScope可以提供应用视图，并标出应用是如何与基础架构相关联 的。这种视图是其他网络管理工具所不能提供的。EcoScope能解决在大型企业复杂环境下分析与测量应用性能的难题。通过提供应用的性能级别及其支撑架 构的信息，EcoScope能帮助IT部门就如何提高应用性能提出多方面的决策方案。EcoScope的应用主要表现在以下几个方面：确保成功部署新应用维护性能的服务水平加速问题检测与纠正的高级功能定制视图有助于高效地分析数据（2）、数据库测试数据自动生成工具——TestBytes在 数据库开发的过程中，为了测试应用程序对数据库的访问，应当在数据库中生成测试用例数据，我们可能会发现当数据库中只有少量数据时，程序可能没有问题，但 是当真正投入到运用中产生了大量数据时就出现问题了，这往往是因为程序的编写没有达到，所以一定及早地通过在数据库中生成大量数据来帮助开发人员完善这部 分功能和性能。TestBytes是一个用于自动生成测试数据的强大易用的工具，通过简单的点击式操作，就可以确定需要生成的数据类型（包括特殊 字符的定制），并通过与数据库的连接来自动生成数百万行正确的测试数据，可以极大地提高数据库开发人员、QA测试人员、数据仓库开发人员、应用开发人员的 工作效率。（3）、PC—LINTPC—LINT 主要进行更严格的语法检查功能，还完成相当程度的语义检查功能。可以这样认为：PC—LINT是一个更加智能、更加严格的编译器。PC—LINT在实现语 法和某些语义规则检查时，是通过参数配置完成的，它的选项就有数百个之多，因此，在使用PC—LINT过程中，了解选项的含义也很重要。（4）、TCLTCL是Tool Command Language的缩写，它是一种很流行的脚本解释器，尤其在测试领域，它的最大特点是可移植性好，接口简单，方便，可以很容易地嵌入到软件中，作为自己的解释器使用。TCL提供两种接口：编程接口和用户接口。编程接口是通过LIB或DLL形式提供的，提供了一些函数（命令）供调用，包括：分配一个解释器指针（对象）；初始化解释器（指针）；注册扩展函数等。用户接口很简单，即编写的脚本，脚本里面包含对扩展命令的调用。（5）VB测试工具：VB Watch（6）Java 程序的测试工具1）Bean—Test2）EJBQuickTest3）JStyle4）JTest5）HttpUnit6）JUnit（7）、覆盖测试C—CoverC—Cover是一个测试工具软件，用来找出没有被测到的代码，并报告测试的覆盖率。C—Cover 只支持C/C++的代码覆盖率分析，其它语言不支持。但不受OS的限制。 单元测试方面：（对开发人员比较有用） J-Unit工具。 功能测试方面：E-test是个不错的选择，功能很强大，由于不是采用Post URL的方式回放脚本，所以可以支持多内码的测试数据（当然要程序支持）。基本上可以应付大部分的Web Site。 如果只是利用脚本回放代替手工劳动，或者做对页面响应数的性能测试，Microsoft Web Application Stress Tool是个不错的选择。 另外，在性能测试方面，PureLoad也是一个不错的工具，完全用Java写成，可以测试各种C/S程序，如SMTP Server等。这两个工具都是使用Post URL的方法测试Web Application的。对大量使用JavaScript的页面不太适合。当然，如果程序在Unix，linux下面运行的话，可以直接编写Shell 脚本程序，更加方便。 另外，还有很多专门的工具，比如说Linkbot是专门作页面链接测试的。 另外，测试流程管理工具也有不 少，个人用过也一直在用的是Test Plan Control，短小精悍，不错。 至于WinRunner和LoadRunner之类，因为没有License，所以都没怎么用过，惭愧。不过我看过一篇英国人评价英国测试市场上最流行 的五个软件的文章。WinRunner得分最高。 测试工具从测试的方法上可以分为两种：白盒测试和黑盒测试 白盒测试工具主要有： 内存资源泄漏检查：Numega中的bouncechecker,Rational的Purify等 代码覆盖率检查：Numega中的truecoverage,Rational的Purecoverage，Telelogic公司的 logiscope, Macabe公司的Macabe等 代码性能检查：Numega中的truetime,Rational的Quantify等 代码静态度量分析质量检查工具：logiscope和Macabe等 黑盒测试工具主要有： 客户端功能测试：MI公司的winrunner,compuware的qarun,Rational的SQA robot等等 服务器端压力性能测试： MI公司的winload,compuware的qaload,Rational的SQA load等等 Web测试工具：MI公司的Astra系列，rsw公司的e-test suite等等 测试管理工具：rational的test manager,compuware的qadirector等等，此外还有缺陷跟踪工具 trackrecord等。 数据库测试工具:TestBytes 黑盒测试工具：QACenter、SQATeamTest，Rational Viaual Test。 回归测试工具：Rational TeamTest，WinRunner（MI公司） WEB系统测试工具：TEST，Workberch，Web Appication Stress Tool（WAS） 白盒测试工具：Numega 、PuRe、软件纠错工具（Rational Purity）。 嵌入式测试工具：Logiscope（静态测试工具）、CodeTest。 系统负荷测试工具：RationalPerformance 涵盖测试工具范围评估工具 软件性能测试工具：LoadRunner（MI产品）、Rational Visual Qantify 测试管理工具：TestDirector（MI产品支持整个生命周期中测试流程管理）","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"},{"name":"软件测试","slug":"软件测试","permalink":"http://blog.e-ant.cn/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}]},{"title":"正则表达式示例","slug":"前端开发/RegExp/regexp-demo","date":"2010-02-23T04:55:00.000Z","updated":"2020-04-26T09:53:35.501Z","comments":true,"path":"2010/02/23/前端开发/RegExp/regexp-demo/","link":"","permalink":"http://blog.e-ant.cn/2010/02/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/RegExp/regexp-demo/","excerpt":"自己此前有用到的一些正则表达式。","text":"自己此前有用到的一些正则表达式。 归整如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&lt;HTML&gt; &lt;HEAD&gt; &lt;TITLE&gt;正则表达式示例&lt;/TITLE&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt; &lt;META NAME=\"Generator\" CONTENT=\"EditPlus\"&gt; &lt;META NAME=\"Author\" CONTENT=\"一只蚂蚁\"&gt; &lt;META NAME=\"Keywords\" CONTENT=\"RegExp\"&gt; &lt;META NAME=\"Description\" CONTENT=\"RegExpression Demo\"&gt; &lt;/HEAD&gt; &lt;BODY&gt; &lt;form&gt; &lt;div&gt; 待验证值: &lt;input type=text οnblur=\"TestResult.value=RegExpTest(this.value,1);\"&gt;&lt;br /&gt; 验证结果: &lt;input type=text id=\"TestResult\"&gt;&lt;/div&gt; &lt;br /&gt;&lt;br /&gt; &lt;div&gt; 待替换值: &lt;input type=text οnblur=\"ReplaceResult.value=RegExpReplace(this.value,1);\"&gt;&lt;br /&gt; 替换结果: &lt;input type=text id=\"ReplaceResult\"&gt; &lt;/div&gt; &lt;br /&gt; &lt;/form&gt; &lt;/BODY&gt;&lt;/HTML&gt;&lt;script language=\"javascript\" type=\"text/javascript\"&gt;&lt;!--/** * 常用正则验证 * @param val 待验证字串 * @param type 验证类型 * 1:浮点数 * 2:数字 * 3:整数 * 4.字母 * 5:字母,下划线 * 6.字母,数字,下划线 * 7:字母,数字,下划线,不以数字开头 * 8:汉字 * 9:Email * 10:URL * 11:大陆身份证号码 * 12:台湾身份证号码 * @return 成功:返回true;失败:返回false **/function RegExpTest(val,type)&#123; var RegExpression ; switch ( type ) &#123; //浮点数(最多7位整数,三位小数) case 1: RegExpression = /^-?/d&#123;1,7&#125;(/./d&#123;0,3&#125;)?$/; break; //数字(不以0开头或为0) case 2: RegExpression = /^([0]|[1-9]/d*)$/; break; //整数(最大7位) case 3: RegExpression = /^([0]|-?[1-9]/d&#123;0,6&#125;)$/; break; //字母 case 4: RegExpression = /^[a-zA-Z]+$/; break; //字母,下划线 case 5: RegExpression = /^[a-zA-Z_]+$/; break; //字母,数字,下划线 case 6: RegExpression = /^[a-zA-Z0-9_]+$/; break; //字母,数字,下划线,不以数字开头 case 7: RegExpression = /^[a-zA-Z_][a-zA-Z0-9_]*$/; break; //汉字 case 8: RegExpression = /^[/u4e00-/u9fa5]+$/; break; //Email case 9: RegExpression = /^/w+@[a-zA-Z0-9]+/.[a-zA-Z0-9]+$/; break; //URL case 10: RegExpression = /^[a-zA-z]+:////[^s]*$/; break; //身份证号码(大陆:15位或18位) case 11: RegExpression = /^(/d&#123;15&#125;|/d&#123;18&#125;)$/; break; //身份证号码(台湾) case 12: RegExpression = /^[A-Z][1-2]/d&#123;7&#125;/d$/; break; &#125; //not undefined if ( typeof(RegExpression) != 'undefined' ) &#123; //验证通过 return RegExpression.test(val); &#125; else &#123; alert('请输入正确的校验编号!'); return false; &#125; &#125;/** * 常用正则替换 * @param val 待替换字串 * @param type 替换类型 * 1:去除首尾空格 * 2: * @return 替换后结果 **/function RegExpReplace(val,type)&#123; var RegExpression ; switch ( type ) &#123; //首尾空格 case 1: RegExpression = /^/s*|/s*$/g; break; &#125; //not undefined if ( typeof(RegExpression) != 'undefined' ) &#123; //替换,返回 return val.replace(RegExpression,''); &#125; else &#123; alert('请输入正确的校验编号!'); return false; &#125;&#125; // --&gt;&lt;/script&gt;","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"前端","slug":"体系/前端","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"http://blog.e-ant.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"RegExpression","slug":"RegExpression","permalink":"http://blog.e-ant.cn/tags/RegExpression/"}]},{"title":"SQL Server常见问题","slug":"数据库/sqlserver/sqlserver-faq","date":"2009-11-23T10:22:00.000Z","updated":"2020-04-26T10:32:44.363Z","comments":true,"path":"2009/11/23/数据库/sqlserver/sqlserver-faq/","link":"","permalink":"http://blog.e-ant.cn/2009/11/23/%E6%95%B0%E6%8D%AE%E5%BA%93/sqlserver/sqlserver-faq/","excerpt":"","text":"SQL Server查詢某个表既定字段的约束值12345678910111213Declare @Table VARCHAR(100)Declare @Column VARCHAR(100)--这里接收表名及字段名SET @Table&#x3D;&#39;表名&#39;SET @Column&#x3D;&#39;字段名&#39;IF Len(@Table)&gt;0 AND Len(@Column)&gt;0 Beginset @Table&#x3D;&#39;dbo.&#39; + @Tableselect object_name(constid) Constraint_Name from sysconstraints scjoin syscolumns sm on sc.id &#x3D; sm.id and sc.colid &#x3D; sm.colidwhere sc.id &#x3D; object_id(@Table) and sm.name &#x3D;@Column and sc.status | 5 &#x3D; sc.statusEND","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"FAQ","slug":"FAQ","permalink":"http://blog.e-ant.cn/tags/FAQ/"},{"name":"SQL Server","slug":"SQL-Server","permalink":"http://blog.e-ant.cn/tags/SQL-Server/"}]},{"title":"65个源代码网站","slug":"常用工具/opens-wbsite","date":"2009-11-20T04:24:00.000Z","updated":"2020-04-26T09:53:11.194Z","comments":true,"path":"2009/11/20/常用工具/opens-wbsite/","link":"","permalink":"http://blog.e-ant.cn/2009/11/20/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/opens-wbsite/","excerpt":"1.51源码：http://www.51aspx.com/2.源码之家：http://www.codejia.com/3.源码网：http://www.codepub.com/4.虾客源码：http://www.xkxz.com/5.源码开发网：http://www.codedn.com/","text":"1.51源码：http://www.51aspx.com/2.源码之家：http://www.codejia.com/3.源码网：http://www.codepub.com/4.虾客源码：http://www.xkxz.com/5.源码开发网：http://www.codedn.com/ 6.洪越源代码：http://www.softhy.net/7.锋网源码：http://www.fwvv.net/8.代码爱好者：http://www.codefans.com/9.爱源码：http://www.aiyuanma.com/10.酷源码：http://www.kyuanma.com/11.搜源码：http://www.soucode.com/12.拉基源码：http://www.lajicode.com/13.源软中国：http://www.600it.com/14.源码天空：http://www.codesky.net/15.源码吧：http://www.asp88.net/16.绿色源码：http://code888.cn/17.9号源码中心：http://www.9code.com/18.网馨源码：http://www.asppsa.com/20.源码天下：http://www.pccode.net/21.需要源码：http://www.needcode.cn/（感觉不错！）22.华夏源码：http://www.haocpu.com/23.天新网：http://codes.21tx.com/24.源码网：http://www.yuanma5.com/（感觉不错！）25.无忧源码：http://www.5uym.com/（有演示地址）26.中国下载站：http://www.cnz.cc/27.资源吧：http://www.ziyuan8.com/28.启明星源码：http://www.codewww.com/29.我要源码：http://www.xia51.com/30.清秋源码：http://www.asp678.com/31.万润源码：http://www.mwzv.com/32.代码秀：http://www.39g.com/33.中文天下源码站：http://www.zwsky.net/34.世纪源码：http://www.sjcodes.com/35.源码300：http://www.ym300.com/36.问友源码：http://www.winu.cn/37.梦想源码：http://gjj.cc/ZongHe/ZiXun/52086.htm38.源码联盟：http://www.aspsun.com39.168源码：http://www.168code.com/40.源码大全：http://www.2007boys.cn/41.易搜源码：http://www.yscode.com/42.下吧源码：http://www.xia8.com/43.早雪网：http://www.zaoxue.com44.我要下源码：http://www.51xia.net/45.54源码：http://www.54code.com/46.久久源码：http://www.99code.net47.中国web开发者网络：http://www.webasp.net/48.源码之家：http://www.mycodes.net/49.新E家源码：http://www.92e.net/50.中国源码下载站：http://www.downcode.com/51.第四源码：http://www.asp4.cn/52.asp1源码：http://www.asp1.com.cn/53.华南源码：http://www.fjcode.cn54.源码分享：http://www.codeftp.cn/55.好源码：http://www.haocodes.com/56.算法源码吧：http://www.sfcode.cn/（有意思！）57.龙都源码：http://www.londu.net/58.精华源码：http://www.jhdown.com/59.逆流源码：http://www.niliu.cn/60.中国源码教程网：http://www.kuziyuan.com/61.源代码：http://www.fgfg.net/62.源码中国：http://www.cn700.com/63.怀化源码网：http://www.xp90.com/sort/242_1.html64.中国源码之家：http://www.chcode.net/65.侠载源码：http://www.xiacode.com/","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"源码网","slug":"源码网","permalink":"http://blog.e-ant.cn/tags/%E6%BA%90%E7%A0%81%E7%BD%91/"}]},{"title":"ASP.NET导出Crystal Report水晶报表功能实现代码","slug":"后端开发/CSharp/donet-crystal","date":"2009-11-19T12:16:00.000Z","updated":"2020-04-26T10:09:01.602Z","comments":true,"path":"2009/11/19/后端开发/CSharp/donet-crystal/","link":"","permalink":"http://blog.e-ant.cn/2009/11/19/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/CSharp/donet-crystal/","excerpt":"","text":"先在Web.config文件中做如下配置【Web.config】 123456789101112131415161718192021222324252627&lt;?xml version=\"1.0\"?&gt;&lt;configuration&gt; &lt;configSections&gt; ....... &lt;appSettings&gt; ... &lt;!--报表服务器--&gt; &lt;add key=\"rptSeverName\" value=\"localhost\"/&gt; &lt;add key=\"rptUser\" value=\"testId\"/&gt; &lt;add key=\"rptPwd\" value=\"testPwd\"/&gt; &lt;/appSettings&gt; &lt;connectionStrings/&gt; &lt;system.web&gt; &lt;compilation&gt; &lt;assemblies&gt; &lt;!--此处为报表所需之assembly--&gt; &lt;add assembly=\"CrystalDecisions.CrystalReports.Engine, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; &lt;add assembly=\"CrystalDecisions.ReportSource, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; &lt;add assembly=\"CrystalDecisions.Shared, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; &lt;add assembly=\"CrystalDecisions.Web, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; &lt;add assembly=\"CrystalDecisions.ReportAppServer.ClientDoc, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; &lt;add assembly=\"CrystalDecisions.Enterprise.Framework, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; &lt;add assembly=\"CrystalDecisions.Enterprise.InfoStore, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\"/&gt; ...&lt;/assemblies&gt; &lt;/compilation&gt; &lt;/system.web&gt;&lt;/configuration&gt; 报表导出处理页面【report.aspx】 123456789101112131415161718192021&lt;%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"report.aspx.cs\" Inherits=\"report\" %&gt;&lt;%@ Register Assembly=\"CrystalDecisions.Web, Version=10.2.3600.0, Culture=neutral, PublicKeyToken=692fbea5521e1304\" Namespace=\"CrystalDecisions.Web\" TagPrefix=\"CR\" %&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" &gt;&lt;head runat=\"server\"&gt; &lt;title&gt;显示报表&lt;/title&gt; &lt;link href=\"/aspnet_client/System_Web/2_0_50727/CrystalReportWebFormViewer3/css/default.css\" mce_href=\"aspnet_client/System_Web/2_0_50727/CrystalReportWebFormViewer3/css/default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;&lt;/head&gt;&lt;body&gt; &lt;form id=\"form1\" runat=\"server\"&gt; &lt;div align=center&gt; &lt;cr:crystalreportviewer id=\"CrystalReportViewer\" runat=\"server\" autodatabind=\"true\" Height=\"50px\" Width=\"350px\" DisplayGroupTree=\"False\"&gt;&lt;/cr:crystalreportviewer&gt; &lt;/div&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 报表导出处理后台逻辑代码【report.asp.cs】 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101using System;using System.Data;using System.Configuration;using System.Collections;using System.Web;using System.Web.Security;using System.Web.UI;using System.Web.UI.WebControls;using System.Web.UI.WebControls.WebParts;using System.Web.UI.HtmlControls;using CrystalDecisions.CrystalReports.Engine;using CrystalDecisions.Shared;using Com.Everunion.Util;public partial class report : System.Web.UI.Page&#123; &#x2F;&#x2F;报表档案 private ReportDocument reportdoc; &#x2F;&#x2F;log private static readonly log4net.ILog log &#x3D; log4net.LogManager.GetLogger(typeof(report)); &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 加載 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; protected void Page_Load(object sender, EventArgs e) &#123; ConfigureCrystalReports(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 设定报表信息 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; private void ConfigureCrystalReports() &#123; reportdoc &#x3D; new ReportDocument(); string rptName &#x3D; Request.Params[&quot;rpt&quot;]; string reportPath &#x3D; Server.MapPath(&quot;rpt&#x2F;&quot; + rptName); reportdoc.Load(reportPath); &#x2F;&#x2F;设定参数 for ( int i &#x3D; 0; i &lt; reportdoc.ParameterFields.Count; i ++ ) &#123; string key &#x3D; reportdoc.ParameterFields[i].Name; reportdoc.SetParameterValue(key, StringUtil.ToStr(Request.Params[key])); &#125; &#x2F;&#x2F;取得报表DataSource连接参数 String rptServerName &#x3D; ConfigurationManager.AppSettings[&quot;rptSeverName&quot;].ToString(); String rptUser &#x3D; ConfigurationManager.AppSettings[&quot;rptUser&quot;].ToString(); String rptPwd &#x3D; ConfigurationManager.AppSettings[&quot;rptPwd&quot;].ToString(); &#x2F;&#x2F;设定数据源 TableLogOnInfo logonInfo &#x3D; new TableLogOnInfo(); foreach ( CrystalDecisions.CrystalReports.Engine.Table table in reportdoc.Database.Tables ) &#123; logonInfo &#x3D; table.LogOnInfo; logonInfo.ConnectionInfo.ServerName &#x3D; rptServerName; logonInfo.ConnectionInfo.UserID &#x3D; rptUser; logonInfo.ConnectionInfo.Password &#x3D; rptPwd; table.ApplyLogOnInfo(logonInfo); &#125; &#x2F;&#x2F;直接在浏览器上显示 &#x2F;&#x2F;CrystalReportViewer.ReportSource &#x3D; reportdoc; &#x2F;&#x2F;导出至文件 &#x2F;&#x2F;报表类型 string rptType &#x3D; Request.Params[&quot;rptType&quot;].Trim(); &#x2F;&#x2F;报表名称 string filename &#x3D; rptName.Replace(&quot;.rpt&quot;, &quot;&quot;); &#x2F;&#x2F;PDF格式 if ( rptType.ToUpper().Equals(&quot;PDF&quot;) ) &#123; reportdoc.ExportToHttpResponse(ExportFormatType.PortableDocFormat, Response, true, filename); &#125; &#x2F;&#x2F;EXCEL格式 else if ( rptType.ToUpper().Equals(&quot;XLS&quot;) ) &#123; reportdoc.ExportToHttpResponse(ExportFormatType.Excel, Response, true, filename); &#125; &#x2F;&#x2F;HTML格式 else if ( rptType.ToUpper().Equals(&quot;HTML&quot;) ) &#123; reportdoc.ExportToHttpResponse(ExportFormatType.HTML32, Response, true, filename); &#125; &#x2F;&#x2F;DOC格式 else if ( rptType.ToUpper().Equals(&quot;DOC&quot;) ) &#123; reportdoc.ExportToHttpResponse(ExportFormatType.WordForWindows, Response, true, filename); &#125; &#x2F;&#x2F;RTF格式 else if ( rptType.ToUpper().Equals(&quot;RTF&quot;) ) &#123; reportdoc.ExportToHttpResponse(ExportFormatType.RichText, Response, true, filename); &#125; else Response.Write(&quot;错误的报表格式:&quot; + rptType); &#125;&#125; 調用方法: widow.open(&quot;report.aspx?rpt=sample.rpt&amp;rptType=xls&amp;params=....&quot;); 其中： ​ rpt–为水晶报表名称，后缀名为.rpt ​ rptType–为报表导出类型，如: xls,pdf,doc,rtf等…. ​ params–为报表所需内部参数，根据报表参数需要自行添加","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"后端","slug":"体系/后端","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://blog.e-ant.cn/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://blog.e-ant.cn/tags/ASP-NET/"},{"name":"Crystal Report","slug":"Crystal-Report","permalink":"http://blog.e-ant.cn/tags/Crystal-Report/"},{"name":"报表","slug":"报表","permalink":"http://blog.e-ant.cn/tags/%E6%8A%A5%E8%A1%A8/"}]},{"title":"Java发送EMail实现代码","slug":"后端开发/Java/mail","date":"2009-10-19T12:26:00.000Z","updated":"2020-04-26T11:46:14.997Z","comments":true,"path":"2009/10/19/后端开发/Java/mail/","link":"","permalink":"http://blog.e-ant.cn/2009/10/19/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java/mail/","excerpt":"废话不多说，直接上代码：","text":"废话不多说，直接上代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229/** * 发送邮件 * @param req HTTP伺服器请求 * @return HashMap 返回值 * @throws Exception */ public HashMap sendEmail( HttpServletRequest req ) throws Exception &#123; //返回值 HashMap retMap = new HashMap(); //是否发送成功 String ok_fail = \"\"; //发送成功的邮件 String validEmail = \"\"; //发送失败的邮件 String invalidEmail = \"\"; //路径 String severPath = \"http://\" + req.getServerName() + \":\" + req.getServerPort()+ req.getContextPath()+\"/\"; //图片格式 String imgStart = \"&lt;IMG SRC='\" + severPath ; String imgSize1 = \"' width=220 heigh=160 &gt;\"; String imgSize2 = \"' width=50 heigh=50 &gt;\"; //邮件以html格式发送,字符集为utf-8 String htmlStart = \"&lt;HTML&gt;&lt;meta http-equiv=Content-Type content=text/html;charset=utf-8&gt;\"; String htmlEnd = \"&lt;/HTML&gt;\"; //取邮件服务器资料 ResourceBundle actionDB = ResourceBundle.getBundle(\"smtpdata\"); String SmtpServer= actionDB.getString(\"SmtpServer1\"); String smtpUser = actionDB.getString(\"SmtpUser1\"); String SmtpPwd = actionDB.getString(\"SmtpPwd1\"); //经销商为空时 if ( \"\".equals(StringUtil.toStr(SessionUtil.getDealerId(req),\"\")) ) &#123; SmtpServer= actionDB.getString(\"SmtpServer2\"); smtpUser = actionDB.getString(\"SmtpUser2\"); SmtpPwd = actionDB.getString(\"SmtpPwd2\"); &#125; System.out.println(\"邮件服务器资料如下:\"); System.out.println(\"SmtpServer = \"+SmtpServer); System.out.println(\"smtpUser = \"+smtpUser); System.out.println(\"SmtpPwd = \"+SmtpPwd); //取发送人地址 String fromEmail = StringUtil.toStr(SessionUtil.getUserEmail(req)); //发信人名字 String NickName = StringUtil.toStr(req.getParameter(\"NickName\")); //取编号 String EDrfnbr = StringUtil.toStr(req.getParameter(\"EDrfnbr\")); //是否寄定期电子邮件 String ESpaper = StringUtil.toStr(req.getParameter(\"ESpaper\")); //取收件人地址 String toEmails = emailCorrect(new String(req.getParameter(\"emailList\"))); //取信件主旨 String subject = StringUtil.toStr(req.getParameter(\"EStitle\")); //取信件内容 String Content = new String(req.getParameter(\"EScontent\")).trim(); //取图片 String ESpic = StringUtil.toStr(req.getParameter(\"ESpic\")); //取个人资讯 String signature = StringUtil.toStr(req.getParameter(\"signature\")); //取附图 String pic = StringUtil.toStr(req.getParameter(\"pic\")); //是否使用个人化TITLE String PersonalizedTitle = StringUtil.toStr (req.getParameter(\"CkbPersonalizedTitle\")); PersonalizedTitle = \"on\".equals(PersonalizedTitle)?\"Y\":\"N\"; //如果有图片 ESpic = \"\".equals(ESpic)?\"\":imgStart + ESpic + imgSize1; //如果有附图 pic = \"\".equals(pic)?\"\":imgStart + pic + imgSize2; //附文 String HContent =\"&lt;BR&gt;\" + ESpic + \"&lt;BR&gt;\" + signature + \"&lt;BR&gt;\" + pic +\"&lt;BR&gt;\"; //取属性 Properties props = new Properties(); //添加SMTP的服务器 props.put(\"mail.smtp.host\", SmtpServer); props.put(\"mail.transport.protocol\", \"smtp\"); //props.put(\"mail.smtp.connectiontimeout\", \"10000\"); //这是延时 //props.put(\"mail.smtp.timeout\", \"10000\"); //如果smtp有加验证需要在后面加上true！ props.put(\"mail.smtp.auth\", \"true\"); // 加验证 EmailAuthenticator auth = new EmailAuthenticator(smtpUser, SmtpPwd); //得到session的配置文件与验证加进去 javax.mail.Session sendMailSession = javax.mail.Session.getDefaultInstance(props,auth); //需要调试可以用下面的这行代码 //sendMailSession.setDebug(true); javax.mail.internet.MimeMessage msg = new javax.mail.internet.MimeMessage(sendMailSession); //取得发送人地址 javax.mail.internet.InternetAddress fromAddress = new javax.mail.internet.InternetAddress(fromEmail); //设定发送人地址 msg.setFrom(fromAddress); //设定邮件发送日期 msg.setSentDate(new java.util.Date()); //设定邮件主题 msg.setSubject( subject, \"UTF-8\"); //建立 javax.mail.Transport transport = sendMailSession.getTransport(\"smtp\"); try &#123; //连结 transport.connect(SmtpServer, smtpUser, SmtpPwd); //分解收件人地址 String[] toAddress = toEmails.split(\",\"); System.out.println(\"要发送的EMAIL共有: \" +toAddress.length +\" 个\"); System.out.println(\"发送的NAME和EMAIL如下: \"); //循环发送 for( int i=0; i&lt; toAddress.length; i++ ) &#123; String toAddress_i = toAddress[i]; //分解姓名与email,并验证是否为email String[] nemail = name_email(toAddress_i); String toName_i = nemail[0]; String toEmail_i = nemail[1]; System.out.println(\"NAME_\"+i+\" : \"+toName_i); System.out.println(\"EMAIL_\"+i+\" : \"+toEmail_i); //姓名与email相同，说明不是email地址 if ( toName_i.equals(toEmail_i) ) &#123; invalidEmail += toAddress[i]; invalidEmail += \",\"; &#125; //如果是email地址 else &#123; //加入收件地址列 msg.setRecipient(javax.mail.Message.RecipientType.TO, new javax.mail.internet.InternetAddress(toEmail_i)); String Content_1 = \" \" + Content; //如果是个人化TITLE if ( \"Y\".equals(PersonalizedTitle) ) &#123; //Dear &#123;收信人&#125;: String Ptitle = \"Dear \" + toName_i + \":&lt;BR&gt;\" ; Content_1 = Ptitle + \" \" + Content; &#125; //邮件内容 msg.setContent(htmlStart + Content_1 + HContent + htmlEnd, \"text/html;charset=utf-8\"); // 保存 msg.saveChanges(); // 发送 try &#123; transport.send(msg); //更新成功邮件列表 validEmail += toAddress[i]; validEmail += \",\"; &#125; //例外(email地址不存在时) catch ( SendFailedException e1) &#123; //更新失败邮件列表 invalidEmail += toAddress[i]; invalidEmail += \",\"; &#125; &#125; &#125; //调整 validEmail = emailCorrect(validEmail); invalidEmail = emailCorrect(invalidEmail); //成功个数 int validNum = \"\".equals(validEmail)?0:validEmail.split(\",\").length; //失败个数 int invalidNum = \"\".equals(invalidEmail)?0:invalidEmail.split(\",\").length; System.out.println(\"发送成功:\"+validNum +\" 个\"); System.out.println(\"发送失败\"+invalidNum +\" 个\"); System.out.println(\"发送成功的email:\"+validEmail); System.out.println(\"发送失败的email\"+invalidEmail); //如果全部失败 if ( invalidNum == toAddress.length ) &#123; ok_fail = \"fail\"; &#125; //如果有成功 else &#123; //全部成功 if ( validNum == toAddress.length ) ok_fail = \"ok\"; //部分成功 else ok_fail = \"both\"; //新增邮件发送记录 if ( insertData(req ,EDrfnbr,subject,Content, ESpaper, NickName) ) System.out.println(\"信件寄送记录表NS_EDM0427_SENDLOG新增成功!\"); else System.out.println(\"信件寄送记录表NS_EDM0427_SENDLOG新增失败!\"); &#125; &#125; //例外 catch( Exception e ) &#123; //设置返回值 ok_fail = \"auth_fail\"; e.printStackTrace(); throw e; &#125; //关闭连结,把值传回 finally &#123; transport.close(); &#125; //返回值 retMap.put(\"Mes\",ok_fail); retMap.put(\"validEmail\",replace(validEmail)); retMap.put(\"invalidEmail\",replace(invalidEmail)); return retMap;&#125; 以下代码是邮件验证时需用到的一个类： 123456789101112131415161718192021package MyEmailTest;import javax.mail.PasswordAuthentication;/** * @author Administrator * */public class MyAuthenticator extends javax.mail.Authenticator &#123; private String strUser; private String strPwd; public MyAuthenticator(String user, String password) &#123; this.strUser = user; this.strPwd = password; &#125; protected PasswordAuthentication getPasswordAuthentication() &#123; return new PasswordAuthentication(strUser, strPwd); &#125;&#125;","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"后端","slug":"体系/后端","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://blog.e-ant.cn/tags/Java/"},{"name":"Email","slug":"Email","permalink":"http://blog.e-ant.cn/tags/Email/"}]},{"title":"JXL操作Excel实现代码","slug":"后端开发/Java/jxl","date":"2009-10-19T12:16:00.000Z","updated":"2020-04-26T11:46:01.433Z","comments":true,"path":"2009/10/19/后端开发/Java/jxl/","link":"","permalink":"http://blog.e-ant.cn/2009/10/19/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/Java/jxl/","excerpt":"下面是一些利用jxl操作excel的方法,这个class不能直接用,只是一个模板,涉及到一些像是excel存储格格式,字体,颜色,存储格大小,文档名称之类的一些零星方法。","text":"下面是一些利用jxl操作excel的方法,这个class不能直接用,只是一个模板,涉及到一些像是excel存储格格式,字体,颜色,存储格大小,文档名称之类的一些零星方法。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283 /** * 产生Excel * @param conn 资料库连结 * @param form 报价单查询Form * @return byte[] excel内容 */ public byte[] getExcel(Connection conn, QuotationForm form) &#123; //初始化,字节流 ByteArrayOutputStream baos = new ByteArrayOutputStream(); WritableWorkbook workbook = null; //引用WritableWorkbook workbook = Workbook.createWorkbook(baos); //引用WritableSheet,sheet名 WritableSheet sheet = workbook.createSheet(\"报价单\", 0); //设置单元格的宽度 sheet.setColumnView(0, 10); sheet.setColumnView(1, 12); sheet.setColumnView(2, 15); sheet.setColumnView(3, 10); //详细资料字体 WritableFont detail = new WritableFont(WritableFont.createFont(\"新细明体\"),10,WritableFont.NO_BOLD,false); WritableCellFormat cellformat = new WritableCellFormat(detail); //红色字体 WritableFont redInfo = new WritableFont(WritableFont.createFont(\"新细明体\"),10,WritableFont.NO_BOLD,false, jxl.format.UnderlineStyle.NO_UNDERLINE,jxl.format.Colour.RED); WritableCellFormat redcellformat = new WritableCellFormat(redInfo); //粉色字体 WritableFont pinkInfo = new WritableFont(WritableFont.createFont(\"新细明体\"),10,WritableFont.NO_BOLD,false,jxl.format.UnderlineStyle.NO_UNDERLINE,jxl.format.Colour.PINK); WritableCellFormat pinkcellformat = new WritableCellFormat(pinkInfo); //样式(居中) cellformat.setAlignment(jxl.format.Alignment.CENTRE); redcellformat.setAlignment(jxl.format.Alignment.CENTRE); pinkcellformat.setAlignment(jxl.format.Alignment.CENTRE); //大标题 WritableFont title = new WritableFont(WritableFont.createFont(\"新细明体\"), 20, WritableFont.BOLD,false); WritableCellFormat cellformat_title = new WritableCellFormat(title); cellformat_title.setAlignment(Alignment.CENTRE); //小标题 WritableFont sub_title = new WritableFont(WritableFont.createFont(\"新细明体\"),12,WritableFont.BOLD,false); WritableCellFormat cellfornat_subtitle = new WritableCellFormat(sub_title); cellfornat_subtitle.setAlignment(Alignment.CENTRE); //左对齐 WritableCellFormat cellformat_left = new WritableCellFormat(sub_title); cellformat_left.setAlignment(Alignment.LEFT); //右对齐 WritableCellFormat cellformat_right = new WritableCellFormat(detail); cellformat_right.setAlignment(Alignment.RIGHT); //存储格样式,保留两位小数 NumberFormat scale2format = new NumberFormat(\"#0.00\"); WritableCellFormat numbercellformat_scale2 = new WritableCellFormat(detail,scale2format); numbercellformat_scale2.setAlignment(Alignment.RIGHT);int num = 0; //表头 sheet.mergeCells(0, num, 14, num); sheet.addCell( new jxl.write.Label( 0, num, \"报 价 单 查 询\", cellformat_title ) ) ; num ++; //表头 sheet.mergeCells(0, num, 14, num); sheet.addCell(new jxl.write.Label(0, num, \"当前查询条件:\", cellformat_left)); num ++;........ //资料(居中对齐) sheet.addCell(new jxl.write.Label(0, num, form.getQuoid(),cellformat)); //右对齐 sheet.addCell(new jxl.write.Number(1, num, Integer.parseInt(quom), cellformat_right)); //保留两位小数点的数字存储格 sheet.addCell(new jxl.write.Number(5, num, Double.valueOf(avgm).doubleValue(), numbercellformat_scale2)); //粉红色文字的存储格 sheet.addCell(new jxl.write.Label(9, ++ num, stonename, pinkcellformat)); //写入 workbook.write(); //关闭 workbook.close(); //传回 return baos.toByteArray(); &#125; 加下下面这段JSP代码就完整了,你要作的就是修改一下上面那个java类的具体内容,直接调用下面这个jsp就可以了 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;%--/** * &lt;P&gt; Title:导出excel &lt;/P&gt; * &lt;P&gt; Description:导出excel &lt;/P&gt; * &lt;P&gt; Copyright:Copyright (c) &lt;/P&gt; * @author 一只蚂蚁 * @version 0.2 Original Design from design document. */ --%&gt;&lt;%@page contentType=\"application/octet-stream; charset=UTF-8\"%&gt;&lt;%@page import=\"java.sql.*,java.lang.*,java.text.*,java.util.*,java.io.*\"%&gt;&lt;% //缓存不清除(否则文件址直接开启时会出现找不到文件的例外,不可省略) response.setHeader(\"Pragma\", \"cache\"); response.setHeader(\"Cache-Control\", \"cache\"); //response.setHeader(\"Pragma\", \"no-cache\"); //response.setHeader(\"Cache-Control\", \"no-cache\"); //取得语言环境 String ctylgn = ((Locale)session.getAttribute(\"org.apache.struts.action.LOCALE\")).toString(); String alertMes = \"\"; //如果是繁体中文 if ( \"zh_TW\".equals(ctylgn) ) alertMes = \"此档案已删除!\"; //如果是简体中文 else if ( \"zh_CN\".equals(ctylgn) ) alertMes = \"此档案已删除!\"; //如果是英文 else if ( \"en\".equals(ctylgn) ) alertMes = \"This file has been deleted!\"; //取得文件名 String filename = (String)request.getAttribute(\"filename\"); //设定头部 response.setContentType(\"application/octet-stream\"); //设定下载档案名称 response.addHeader(\"Content-Disposition\", \"attachment;filename=\" + new String(filename.getBytes(), \"ISO-8859-1\")); //取得流物件 byte[] data = (byte[])request.getAttribute(\"ExcelDATA\"); ByteArrayInputStream in = new ByteArrayInputStream(data); try &#123; //建立流传输物件 java.io.OutputStream os = response.getOutputStream(); //输出 int read = -1; byte buf[] = new byte[2048]; int k = 0; //写入 while ( (read = ((InputStream)in).read(buf)) != -1 ) &#123; os.write(buf, 0, read); &#125; //写入 os.flush(); &#125;//例外catch ( Exception e )&#123; e.printStackTrace(); System.out.println(alertMes);&#125;//关闭finally&#123; //关闭 //os.flush(); //os.close(); in.close(); in = null; //此段用于防止抛出\"getOutputStream() has already been called for this response\"例外 response.flushBuffer(); out.clear(); out = pageContext.pushBody();&#125;%&gt; 注意：需要依赖jxl.jar包，自行下载","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"后端","slug":"体系/后端","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://blog.e-ant.cn/tags/Java/"},{"name":"jxl","slug":"jxl","permalink":"http://blog.e-ant.cn/tags/jxl/"},{"name":"Excel","slug":"Excel","permalink":"http://blog.e-ant.cn/tags/Excel/"}]},{"title":"excel中从文件路径取文件名的快捷处理方案","slug":"常用工具/excel01","date":"2009-09-17T11:16:00.000Z","updated":"2020-04-25T09:38:14.574Z","comments":true,"path":"2009/09/17/常用工具/excel01/","link":"","permalink":"http://blog.e-ant.cn/2009/09/17/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/excel01/","excerpt":"在做软件开发，基本上写工作日志是每天必不可少的环节，每天都要整理当天所修改的文件列表，都要用到excel。最经常的情况就是从cvs上把已上传的文件路径copy下来，粘到excel中，然后再去切出文件名。资料少还受得了。资料多了，就算是采用查找替换，也是大费周折，实在是浪费时间，于是花了点儿心思，自已写了一个excel处理函数,将这部份的工作无私地奉献给excel处理。处理后，只要将mouse上下一拉，一切搞定.终于可以省心啦。","text":"在做软件开发，基本上写工作日志是每天必不可少的环节，每天都要整理当天所修改的文件列表，都要用到excel。最经常的情况就是从cvs上把已上传的文件路径copy下来，粘到excel中，然后再去切出文件名。资料少还受得了。资料多了，就算是采用查找替换，也是大费周折，实在是浪费时间，于是花了点儿心思，自已写了一个excel处理函数,将这部份的工作无私地奉献给excel处理。处理后，只要将mouse上下一拉，一切搞定.终于可以省心啦。 处理函数如下： 1fx=RIGHT(C2,LEN(C2)-SEARCH(\"@\",SUBSTITUTE(C2,\"/\",\"@\",LEN(C2)-LEN(SUBSTITUTE(C2,\"/\",\"\")))))","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"},{"name":"excel","slug":"excel","permalink":"http://blog.e-ant.cn/tags/excel/"}]},{"title":"Oracle常见问题","slug":"数据库/oracle/oracle-faq","date":"2009-08-29T10:55:00.000Z","updated":"2020-04-26T09:54:50.840Z","comments":true,"path":"2009/08/29/数据库/oracle/oracle-faq/","link":"","permalink":"http://blog.e-ant.cn/2009/08/29/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/oracle-faq/","excerpt":"Oracle监听器Oracleoracle9iTNSListener无法启动解决办法可能原因: 计算机改了名称,导致监听器监听位置出错.解决方法: 找到oracle home下面的network/admin/listener.ora文件,修改Host为你目前计算机的名称或直接改为ip地址.","text":"Oracle监听器Oracleoracle9iTNSListener无法启动解决办法可能原因: 计算机改了名称,导致监听器监听位置出错.解决方法: 找到oracle home下面的network/admin/listener.ora文件,修改Host为你目前计算机的名称或直接改为ip地址. ORACLE进程无法KILL处理方案ORACLE进程被KILL之后，状态被置为”KILLED”，但是锁定的资源长时间不释放，会出现类似下面这样的错误提示： ORA-00030: User session ID does not exist 或 ORA-00031: session marked for kill 以往大多都是通过重启数据库的方式来强行释放锁资源。现提供另一种方式解决该问题，在ORACLE中KILL不掉，在OS系统中再杀，操作方式如下： 查看哪些对象被锁 123SELECT DISTINCT t2.username,t2.sid,t2.serial#,t2.logon_timefrom v$locked_object t1,v$session t2where t1.session_id&#x3D;t2.sid order by t2.logon_time; 查看对应执行的是哪一个SQL语句(会提示输入SID参数，就是上一步查询出来 的SID) 123select sql_text from v$session a,v$sqltext_with_newlines b where DECODE(a.sql_hash_value, 0, prev_hash_value, sql_hash_value)&#x3D;b.hash_value and a.sid&#x3D;&amp;sid order by piece; 杀死对应的进程(上述的sid与serial#参数传入) 1alter system kill session &#39;sid,serial#&#39;; 上述步骤完成之后，若还是无法释放对应的资源，进行下一步操作： 取得语句的进程号 12select spid,osuser,s.program from v$session s,v$process pwhere s.paddr&#x3D;p.addr and s.sid&#x3D;&amp;sid; 在OS级别中杀死该进程a. unix系统，以root身份执行以下命令 1kill -9 &amp;spid #(即第4步查询出来的进程号spid) b. windows系统，用orakill命令执行，语法为:1orakill sid thread sid: oracle实例名thread 线程号，即第4步中的spid例如： 1c:&gt; orakill orcl 12345 上述直至第4步，都是在oracle中执行的，第5步是在操作系统(服务端，非客户端)中执行的","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"http://blog.e-ant.cn/tags/Oracle/"},{"name":"FAQ","slug":"FAQ","permalink":"http://blog.e-ant.cn/tags/FAQ/"}]},{"title":"DIY一款比较好用的批量转换工具【doc2HtmlTider】","slug":"常用工具/doc2HtmlTider","date":"2009-08-23T10:35:00.000Z","updated":"2020-04-25T09:40:39.782Z","comments":true,"path":"2009/08/23/常用工具/doc2HtmlTider/","link":"","permalink":"http://blog.e-ant.cn/2009/08/23/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/doc2HtmlTider/","excerpt":"在自已平时开发过程中很，经常需要做一些非常繁琐的事情，比如编写操作手册。操作手册有多种格式，我最经常见格式的就是pdf、chm或htm等。这里只针对htm作一些优化。 通常Microsoft office本身有提供word转换成html文件的功能，不过无法进行批次转换,效率上不高。这里推荐使用doctohtml.exe这款工具，需要download的可以参考这里doc2Html.exe.。 这款工具软件的优点是替换速度快，但是产生出来的html文件又臭又长，整合后整个操作手册变得非常大。想想还是自已动手丰衣足食，于是我花了点时间写了个简单的优化工具。经测试，用它可以将产生后的文件缩减至原来的60%左右。效果还是看得见的。","text":"在自已平时开发过程中很，经常需要做一些非常繁琐的事情，比如编写操作手册。操作手册有多种格式，我最经常见格式的就是pdf、chm或htm等。这里只针对htm作一些优化。 通常Microsoft office本身有提供word转换成html文件的功能，不过无法进行批次转换,效率上不高。这里推荐使用doctohtml.exe这款工具，需要download的可以参考这里doc2Html.exe.。 这款工具软件的优点是替换速度快，但是产生出来的html文件又臭又长，整合后整个操作手册变得非常大。想想还是自已动手丰衣足食，于是我花了点时间写了个简单的优化工具。经测试，用它可以将产生后的文件缩减至原来的60%左右。效果还是看得见的。 在Visual Studio 2005中 先新建一个WinForm工程,打开Form1.cs,先在view画面上拉两个textbox元件,三个按钮元件,两个label标签 第一个textbox元件textbox1用来取得待替换文件夹路径,配上一个label标签Lable1”待替换文件夹”作为说明,第二个textbox元件textbox2作为替换进度列表显示,设置为Multiline模式,配上另一个Label标签Label2”替换进度”作为说明;另外,三个按钮元件:第一个按钮Button1用来开启文件夹浏览器,第二个按钮Button2用来执行替换动作,第三个按钮Button3用来关闭窗体.Form1.cs[Design]画面结果如下图所示: 然后将其切换至code页面,编辑代码如下: Form1.cs 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201&#x2F;** * &lt;P&gt; Title: 常用工具包 &lt;&#x2F;P&gt; * &lt;P&gt; Description: htm标签清理工具 &lt;P&gt; * &lt;P&gt; Copyright: Copyright (c) 2009-05-04 &lt;&#x2F;P&gt; * @author 一只蚂蚁 * @version 0.1 Original Design from design document. *&#x2F;using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Text;using System.Windows.Forms;using System.IO;using System.Collections;using System.Text.RegularExpressions;namespace HtmlTidier&#123; public partial class Form1 : Form &#123; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 建构方法 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; public Form1() &#123; InitializeComponent(); &#x2F;&#x2F;readonly this.textBox1.ReadOnly &#x3D; true; &#125; &#x2F;&#x2F;待替换文件夾 private string _folder; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 取得待替换文件夹路径 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;按钮物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; private void button1_Click(object sender, EventArgs e) &#123; &#x2F;&#x2F;开启文件夹浏览器 FolderBrowserDialog path &#x3D; new FolderBrowserDialog(); path.ShowDialog(); this.textBox1.Text &#x3D; path.SelectedPath; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 执行替换 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; public void doReplace() &#123; &#x2F;&#x2F;刪除所有png档案 string[] fileLists &#x3D; Directory.GetFiles(_folder, @&quot;*.png&quot;, SearchOption.AllDirectories); foreach ( string newFile in fileLists ) &#123; &#x2F;&#x2F;执行 File.Delete(newFile); doShow(newFile, &quot;已删除!&quot;); &#x2F;&#x2F;updata panel this.Update(); &#125; &#x2F;&#x2F;删除fileList.xml中的png图片结点 fileLists &#x3D; Directory.GetFiles(_folder, @&quot;*.xml&quot;, SearchOption.AllDirectories); foreach ( string newFile in fileLists ) &#123; string s &#x3D; ReadFile(newFile); WriteFile(newFile, doXMLReplace(s)); doShow(newFile, &quot;已替换完成!&quot;); &#x2F;&#x2F;update panel this.Update(); &#125; &#x2F;&#x2F;清理htm文件 fileLists &#x3D; Directory.GetFiles(_folder, @&quot;*.htm&quot;, SearchOption.AllDirectories); foreach ( string newFile in fileLists ) &#123; string s &#x3D; ReadFile(newFile); WriteFile(newFile, doHtmlReplace(s)); doShow(newFile, &quot;已替换完成!&quot;); &#x2F;&#x2F;update panel this.Update(); &#125; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 实时显示 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;_path&quot;&gt;文件路径&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;mess&quot;&gt;提示信息&lt;&#x2F;param&gt; public void doShow(string _path,string mess) &#123; this.textBox2.Text &#x3D; _path + mess + &quot;&#x2F;r&#x2F;n&quot; + this.textBox2.Text; this.textBox2.ScrollToCaret(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 执行替换动作 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;按钮物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; private void button2_Click(object sender, EventArgs e) &#123; _folder &#x3D; this.textBox1.Text; &#x2F;&#x2F;文件夾為空 if ( string.IsNullOrEmpty(_folder) ) &#123; MessageBox.Show(&quot;请选择待替换文件夹!&quot;, &quot;提示!&quot;); return; &#125; &#x2F;&#x2F;替換 doReplace(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; htm标签替换 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;s&quot;&gt;待替换的内容&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;returns&gt;替换后的内容&lt;&#x2F;returns&gt; public string doHtmlReplace(string s) &#123; &#x2F;&#x2F;s &#x3D; s.Replace(&quot;待處理表單操作手冊&quot;, &quot;&quot;); s &#x3D; Regex.Replace(s, @&quot;&lt;!--&#x2F;[if gte vml 1&#x2F;][^!]+&lt;!&#x2F;[endif&#x2F;]--&gt;&quot;, &quot;&quot;); s &#x3D; Regex.Replace(s, @&quot;&lt;!&#x2F;[if !vml&#x2F;]&gt;&quot;, &quot;&quot;); s &#x3D; Regex.Replace(s, @&quot;&#x2F;&quot;&quot;&gt;&lt;!&#x2F;[endif&#x2F;]&gt;&quot;, &quot;&#x2F;&quot;&gt;&quot;); return s; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; fileList.xml替换 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;s&quot;&gt;待替换的内容&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;returns&gt;替换后的内容&lt;&#x2F;returns&gt; public string doXMLReplace(string s) &#123; return Regex.Replace(s, @&quot;&lt;o:File[^&gt;]+png[^&gt;]+&gt;&#x2F;s+&quot;, &quot;&quot;); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 关闭窗口 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;按钮物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; private void button3_Click(object sender, EventArgs e) &#123; this.Close(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 读文件 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Path&quot;&gt;文件路径&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;returns&gt;文件内容&lt;&#x2F;returns&gt; private string ReadFile(string _path) &#123; string s &#x3D; &quot;&quot;; &#x2F;&#x2F;不存在 if ( !File.Exists(_path) ) &#123; s &#x3D; &quot;不存在相应的目录&quot;; &#125; else &#123; StreamReader f2 &#x3D; new StreamReader(_path, Encoding.GetEncoding(&quot;big5&quot;)); s &#x3D; f2.ReadToEnd(); f2.Close(); f2.Dispose(); &#125; &#x2F;&#x2F;返回 return s; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 写文件 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Path&quot;&gt;文件路径&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Strings&quot;&gt;文件内容&lt;&#x2F;param&gt; private void WriteFile(string _path, string content) &#123; &#x2F;&#x2F;不存在 if ( !File.Exists(_path) ) &#123; FileStream f &#x3D; File.Create(_path); f.Close(); f.Dispose(); &#125; &#x2F;&#x2F;StreamWriter StreamWriter f2 &#x3D; new StreamWriter(_path, false, Encoding.GetEncoding(&quot;big5&quot;)); f2.WriteLine(content); f2.Close(); f2.Dispose(); &#125; &#125;&#125; 编译=&gt;运行….bingo!!!","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"批量转换","slug":"批量转换","permalink":"http://blog.e-ant.cn/tags/%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2/"},{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"},{"name":"C#","slug":"C","permalink":"http://blog.e-ant.cn/tags/C/"}]},{"title":"常用的注册码及序列号","slug":"常用工具/sncode","date":"2009-08-22T19:55:00.000Z","updated":"2020-04-26T09:54:23.492Z","comments":true,"path":"2009/08/23/常用工具/sncode/","link":"","permalink":"http://blog.e-ant.cn/2009/08/23/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/sncode/","excerpt":"这些都是本人平时作开发的过程中需要用到的一部份软件，感谢部份网友无私地提供注册码，现将其整理如下: 注意：时间有点久了，有些不一定能用","text":"这些都是本人平时作开发的过程中需要用到的一部份软件，感谢部份网友无私地提供注册码，现将其整理如下: 注意：时间有点久了，有些不一定能用 EditPlus注册码:Name:crskyCode:7879E-5BF58-7DR23-DAOB2-7DR30 UltraEdit32 v13.10版注冊码Name:6个空格 (注意是空格)Code:K8Q1A-V1N5Z-X4G1Y-K0F4G-H8D56-15H8y UltraCompare Profession v6注冊码Name：3ddownCode：NXLH3-IMPMD-JINOI-RKTHM-NGFLC-GHKFV-DSQLO-GDOV6 Visual CHM 4.10(或者3.10版本)注册版注册码：Name:zhucemaCode:IHIDRWELLS VMware Workstation序列號:5.5版YLT64-MKFFG-8A1DY-4M8ZKLCT4T-24GFE-A816V-4MTQQHKXHD-KUN0G-HA5DF-4MTZ2 6.0版A8HC7-1GGR0-E4PD4-4T694YLT64-MKFFG-8A1DY-4M8ZK BB FlashBack Pro 2.62版(录像制作专家)下载地址Name : 任意code:2SX72-MIG9C-NX5V3-S4TL3-4B4V","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"注册码","slug":"注册码","permalink":"http://blog.e-ant.cn/tags/%E6%B3%A8%E5%86%8C%E7%A0%81/"},{"name":"序列号","slug":"序列号","permalink":"http://blog.e-ant.cn/tags/%E5%BA%8F%E5%88%97%E5%8F%B7/"}]},{"title":"Oracle彻底卸载及安装","slug":"数据库/oracle/oracle-install","date":"2009-08-22T18:55:00.000Z","updated":"2020-04-26T09:54:41.725Z","comments":true,"path":"2009/08/23/数据库/oracle/oracle-install/","link":"","permalink":"http://blog.e-ant.cn/2009/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/oracle-install/","excerpt":"Oracle卸载步骤： 停止Oracle所有服务 方法：开始–&gt;设定–&gt;控制台–&gt;系统管理工具–&gt;服务–&gt;停止所有Oracle服务 运行Oracle Universal Installer卸载Oracel","text":"Oracle卸载步骤： 停止Oracle所有服务 方法：开始–&gt;设定–&gt;控制台–&gt;系统管理工具–&gt;服务–&gt;停止所有Oracle服务 运行Oracle Universal Installer卸载Oracel 修改注册表，入入regedit注册表，删除以下三个目录下所有以Oracle开头的文件 Oracle软件有关关键值HKEY_LOCAL_MACHINE/SOFTWARE/ Oracle服务 HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/ Oracle事件日志 HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/Eventlog/Application/ 删除系统目录 C:/Programe files/Oracle 删除环境变量 删除path环境变量中所有跟Oracle相关的资料 删除程序菜单项 删除Oracle工作主目录（系统重启后） Oracle安装步骤待补充。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"http://blog.e-ant.cn/tags/Oracle/"},{"name":"卸载","slug":"卸载","permalink":"http://blog.e-ant.cn/tags/%E5%8D%B8%E8%BD%BD/"},{"name":"安装","slug":"安装","permalink":"http://blog.e-ant.cn/tags/%E5%AE%89%E8%A3%85/"}]}],"categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Linux系统","slug":"体系/Linux系统","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/Linux%E7%B3%BB%E7%BB%9F/"},{"name":"前端","slug":"体系/前端","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%89%8D%E7%AB%AF/"},{"name":"后端","slug":"体系/后端","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"Hexo博客搭建","slug":"Hexo博客搭建","permalink":"http://blog.e-ant.cn/tags/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"Next主题","slug":"Next主题","permalink":"http://blog.e-ant.cn/tags/Next%E4%B8%BB%E9%A2%98/"},{"name":"Nginx","slug":"Nginx","permalink":"http://blog.e-ant.cn/tags/Nginx/"},{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"},{"name":"定时备份","slug":"定时备份","permalink":"http://blog.e-ant.cn/tags/%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD/"},{"name":"shell","slug":"shell","permalink":"http://blog.e-ant.cn/tags/shell/"},{"name":"Nexus","slug":"Nexus","permalink":"http://blog.e-ant.cn/tags/Nexus/"},{"name":"版本升级","slug":"版本升级","permalink":"http://blog.e-ant.cn/tags/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"},{"name":"Maven私服","slug":"Maven私服","permalink":"http://blog.e-ant.cn/tags/Maven%E7%A7%81%E6%9C%8D/"},{"name":"CSVN","slug":"CSVN","permalink":"http://blog.e-ant.cn/tags/CSVN/"},{"name":"SVN","slug":"SVN","permalink":"http://blog.e-ant.cn/tags/SVN/"},{"name":"重置密码","slug":"重置密码","permalink":"http://blog.e-ant.cn/tags/%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81/"},{"name":"NFS","slug":"NFS","permalink":"http://blog.e-ant.cn/tags/NFS/"},{"name":"CentOS","slug":"CentOS","permalink":"http://blog.e-ant.cn/tags/CentOS/"},{"name":"ssh升级","slug":"ssh升级","permalink":"http://blog.e-ant.cn/tags/ssh%E5%8D%87%E7%BA%A7/"},{"name":"FAQ","slug":"FAQ","permalink":"http://blog.e-ant.cn/tags/FAQ/"},{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"},{"name":"软件测试","slug":"软件测试","permalink":"http://blog.e-ant.cn/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://blog.e-ant.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"RegExpression","slug":"RegExpression","permalink":"http://blog.e-ant.cn/tags/RegExpression/"},{"name":"SQL Server","slug":"SQL-Server","permalink":"http://blog.e-ant.cn/tags/SQL-Server/"},{"name":"源码网","slug":"源码网","permalink":"http://blog.e-ant.cn/tags/%E6%BA%90%E7%A0%81%E7%BD%91/"},{"name":"C#","slug":"C","permalink":"http://blog.e-ant.cn/tags/C/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://blog.e-ant.cn/tags/ASP-NET/"},{"name":"Crystal Report","slug":"Crystal-Report","permalink":"http://blog.e-ant.cn/tags/Crystal-Report/"},{"name":"报表","slug":"报表","permalink":"http://blog.e-ant.cn/tags/%E6%8A%A5%E8%A1%A8/"},{"name":"Java","slug":"Java","permalink":"http://blog.e-ant.cn/tags/Java/"},{"name":"Email","slug":"Email","permalink":"http://blog.e-ant.cn/tags/Email/"},{"name":"jxl","slug":"jxl","permalink":"http://blog.e-ant.cn/tags/jxl/"},{"name":"Excel","slug":"Excel","permalink":"http://blog.e-ant.cn/tags/Excel/"},{"name":"excel","slug":"excel","permalink":"http://blog.e-ant.cn/tags/excel/"},{"name":"Oracle","slug":"Oracle","permalink":"http://blog.e-ant.cn/tags/Oracle/"},{"name":"批量转换","slug":"批量转换","permalink":"http://blog.e-ant.cn/tags/%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2/"},{"name":"注册码","slug":"注册码","permalink":"http://blog.e-ant.cn/tags/%E6%B3%A8%E5%86%8C%E7%A0%81/"},{"name":"序列号","slug":"序列号","permalink":"http://blog.e-ant.cn/tags/%E5%BA%8F%E5%88%97%E5%8F%B7/"},{"name":"卸载","slug":"卸载","permalink":"http://blog.e-ant.cn/tags/%E5%8D%B8%E8%BD%BD/"},{"name":"安装","slug":"安装","permalink":"http://blog.e-ant.cn/tags/%E5%AE%89%E8%A3%85/"}]}