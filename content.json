{"meta":{"title":"蚂蚁窝","subtitle":"行走无间、自在心间。","description":"","author":"一只蚂蚁","url":"http://blog.e-ant.cn","root":"/"},"pages":[{"title":"所有分类","date":"2020-04-24T01:39:18.000Z","updated":"2020-04-24T14:18:59.583Z","comments":true,"path":"categories/index.html","permalink":"http://blog.e-ant.cn/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-04-24T01:34:03.000Z","updated":"2020-04-24T14:18:48.959Z","comments":true,"path":"tags/index.html","permalink":"http://blog.e-ant.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"阿里云CentOS7+Nginx+Nodejs+Hexo搭建个人静态博客","slug":"hexo-blog-build","date":"2020-04-23T12:35:03.000Z","updated":"2020-04-25T09:40:28.793Z","comments":true,"path":"2020/04/23/hexo-blog-build/","link":"","permalink":"http://blog.e-ant.cn/2020/04/23/hexo-blog-build/","excerpt":"写在前面2010年左右，有用当时很火的CSDN写过一阵子的博客，后来由于工作的关系，自己也懒，就一直没有更新，然后17年左右有一天突然想起来，想登录上去，发现账号密码已经丢了，折腾了很久，愣是没找回来。最近时间相对比较充裕些，就希望写些文字对自己的知识体系做下梳理记录，有个自己的博客，可以随意DIY，还是比较方便些。刚好自己名下有一台闲置的阿里云ECS服务器，度娘了一圈，发现Hexo静态博客依赖少(仅依赖node)、易部署、占用资源小、响应快、模版多、Markdown深度支持等优点，最重要的，是对程序员友好，可折腾空间大，于是有了这个博客。以下是对搭建Hexo博客过程的一个记录。","text":"写在前面2010年左右，有用当时很火的CSDN写过一阵子的博客，后来由于工作的关系，自己也懒，就一直没有更新，然后17年左右有一天突然想起来，想登录上去，发现账号密码已经丢了，折腾了很久，愣是没找回来。最近时间相对比较充裕些，就希望写些文字对自己的知识体系做下梳理记录，有个自己的博客，可以随意DIY，还是比较方便些。刚好自己名下有一台闲置的阿里云ECS服务器，度娘了一圈，发现Hexo静态博客依赖少(仅依赖node)、易部署、占用资源小、响应快、模版多、Markdown深度支持等优点，最重要的，是对程序员友好，可折腾空间大，于是有了这个博客。以下是对搭建Hexo博客过程的一个记录。 环境要求本地环境Windows10(64位)、Git、Nodejs、Hexo 阿里云环境阿里云ECS(Centos7.4 X64)、宝塔、Nginx、Git、Nodejs、Hexo 通过Git实现自动化部署到云服务器上。 开始安装本地WIN10搭建1. 安装Git安装过程自行百度。 安装完成后，配置git全局账号信息： 12git config --global user.email 'you@email.com'git config --global user.name \"your name\" 需要再生成ssh公钥，方便后面自动化部署到云服务器上： 在win10任意地方，右键，点击Git Bash Here打开命令行终端，执行如下命令： 1ssh-keygen -t rsa 生成的文件默认放在c:\\用户\\你自己的用户名.ssh\\目录下。 2 安装Nodejs网上下载最新版本的Nodejs，下载后直接安装即可，安装完成后打开cmd，输入node -v及npm -v，能成功输出版本号信息，就说明成功安装完Nodejs。 3 安装 Hexo新建一个目录，建议不要放在C盘下，比如我的是D:\\hexo-blog\\myblog，打开cmd，cd到这个目录下，运行以下命令： 123456cd d:\\nexo-blog\\myblognpm install hexo-cli -ghexo initnpm install# 启动博客本地访问hexo server 上述如果一切正常，会将hexo博客发布到http://localhost:4000下，打开即可看到。 4 Hexo基本配置博客搭建好了，总得把博客修改成自己的内容吧，进入到打开myblog/_config.yml文件（此文件为hexo的全局配置文件，不同于下面要提到的主题中的同名文件） 12345678# Sitetitle: 网站名称subtitle: '' #子标题description: '' #网站描述keywords: # 关键字author: #作者language: zh-CN #语言,这个表示中文，根据主题的支持项进行配置，具体每个主师支持哪些语言，可以参见themes/主题名/language文件夹下罗列的文件名称timezone: '' # 时区，中国可以填'Asia/ShangHai' 5 配置Next主题hexo-next主题被认为是比较好看好用的主题，我个人也是比较中意，以下介绍下配置过程 进入到myblog目录下，可以看到一个themes文件夹，这个就是存放所有主题的地方，我们先把next主题拉到本地： 1git clone https://github.com/iissnan/hexo-theme-next.git themes/next 打开themes/next下的_config.yml文件，修改其中的部份内容，Schemes为网站风格样式，menu为菜单列表 12345678910111213141516171819202122232425262728293031# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini# Dark Modedarkmode: true# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# Usage: `Key: /link/ || icon`# Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.# Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.# When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).# External url should start with http:// or https://menu: home: / || fa fa-home #about: /about/ || fa fa-user tags: /tags/ || fa fa-tags categories: /categories/ || fa fa-th archives: /archives/ || fa fa-archive #schedule: /schedule/ || fa fa-calendar #sitemap: /sitemap.xml || fa fa-sitemap #commonweal: /404/ || fa fa-heartbeat 其中，菜单默认是只有home及archives，其它几个视自己需要自行添加，添加方法如下： 创建tags 12cd d:\\nexo-blog\\mybloghexo new page \"tags\" 此时，系统会在myblog\\source下创建一个tags的文件夹以下文件夹下的index.md文件，打开该文件，编辑，添加type为tags 12345---title: All tagsdate: 2019-04-24 09:34:03type: \"tags\"--- 创建categories 12cd d:\\nexo-blog\\mybloghexo new page \"categories\" 此时，系统会在myblog\\source下创建一个categories的文件夹以下文件夹下的index.md文件，打开该文件，编辑，添加type为tags 12345---title: categoriesdate: 2019-04-24 09:34:03type: \"categories\"---- 回到myblog目录下，我们需要修改一下全局的_config.yml中的主题配置项，将刚才的next主题配置进去，注意名称与themes下的目录名一定要一致，不然不会生效： 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next 这样，next主题就算配置完成了。hexo server重启一下服务，就可以看到效果了。 阿里云CentOS环境搭建1. git安装配置安装git 1yum install git 创建git账户、添加权限 123adduser gitchmod 740 /etc/sudoersvim /etc/sudoers 找到以下内容，并参照添加 1234## Allow root to run any commands anywhereroot ALL=(ALL) ALL#添加此行--git权限git ALL=(ALL) ALL 保存退出并改回权限 1chmod 400 /etc/sudoers 设置git账户密码 1sudo passwd git 切换至git用户，创建/.ssh文件夹和/.ssh/authorized_keys文件，并赋予相应的权限 123456su gitmkdir ~/.sshvim ~/.ssh/authorized_keys# 将win10中生成的公钥id_rsa.pub文件中的内容复制到authorized_keys中,保存并退出chmod 600 /home/git/.ssh/authorized_keyschmod 700 /home/git/.ssh 本地终端添加免密登录git用户至云服务器，在本地win10上执行以下命令后输入yes，后续只要再执行下面这条命令，就可以直接免密登录到云服务器，如下： 1ssh -v git@服务器公网IP或服务器域名 云服务器切换回root账户，并执行以下命令，创建相应的账户 12345678# /var/repo为git的仓库目录mkdir /var/repochown -R git:git /var/repochmod -R 755 /var/repo# /var/www/hexo作为网站的根目录mkdir /var/www/hexochown -R git:git /var/www/hexochmod -R 755 /var/www/hexo 创建一个空的Git仓库(myblog.git可以自己定义，注意需要与WIN10配置自动化部署时写的名称一致) 12cd /var/repogit init --bare myblog.git 创建一个新的Git钩子，用于自动化部署 在/var/repo/myblog.git下，有一个自动生成的hooks文件夹，我们需要在这里新建一个钩子文件post-receive 1vim /var/repo/myblog.git/hooks/post-receive 进入编辑模式，在该文件中添加以下代码，指定Git的工作树（源代码）和Git目录（配置文件等），保存退出。 12#!/bin/bashgit --work-tree=/var/www/hexo --git-dir=/var/repo/myblog.git checkout -f 添加文件可执行权限 12chown -R git:git /var/repo/myblog.git/hooks/post-receivechmod +x /var/repo/myblog.git/hooks/post-receive 至此，Git仓库及自动化部署算是完全搭建好了。 2. 安装宝塔、选配Nginx其实我之前一直都用lnmp的，不过在试过傻瓜式的宝塔后，就种草了，安装简单、配置方便、易扩展，尤其适合一些小白型用户。以下是安装过程： 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh 默认安装即可，完成安装后，会显示宝塔面板后台的登录地址，账号及密码。 登录宝塔面板后，选配Nginx并点击安装，等待安装完成。 安装完Nginx，接下来就是添加网站，点击网站-&gt;添加站点-&gt;输入域名(无域名可以输入公网IP)-&gt;PHP版本选择【纯静态】，其它默认，提交。然后进一步进入到设置-&gt;配置文件，检查下配置项，修改并保存： 123456789server&#123; # 使用80端口，务必要完成备案才可以 listen 80; # server_name修改为自己的域名 server_name www.xxx.com; index index.php index.html index.htm default.php default.htm default.html; # 网站的根目录 root /var/www/hexo; 3. 启动宝塔服务1service bt restart 配置自动化部署 返回到本地WIN10上，通过配置hexo全局的config.yml文件，实现自动化部署。 _打开本地WIN10上的myblog文件夹，打开_config.yml文件，找到deploy： 1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git # SERVER改为自己的服务器地址，另此处的myblog.git可以自行定义，但需要与下面器配置的名称相对应 repo: git@SERVER:/var/repo/myblog.git branch: master 保存并退出，返回到myblog目录，执行以下命令： 12hexo cleanhexo g -d 没有显示绿色说明完成了，打开浏览器，输入你的域名或IP地址，就可以看到最终的hexo博客了。 至此，一个属于自己的hexo博客的基础功能就都搞定了，其余DIY环节，待后续进一步研究。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Hexo博客搭建","slug":"Hexo博客搭建","permalink":"http://blog.e-ant.cn/tags/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"Next主题","slug":"Next主题","permalink":"http://blog.e-ant.cn/tags/Next%E4%B8%BB%E9%A2%98/"},{"name":"Nginx","slug":"Nginx","permalink":"http://blog.e-ant.cn/tags/Nginx/"}]},{"title":"MySQL数据库定时备份归档脚本","slug":"mysql-backup","date":"2020-04-15T05:35:00.000Z","updated":"2020-04-25T09:39:00.895Z","comments":true,"path":"2020/04/15/mysql-backup/","link":"","permalink":"http://blog.e-ant.cn/2020/04/15/mysql-backup/","excerpt":"自动备份脚本 在选定目录下编写以下文件（如放置到/home/backshell/scripts文件夹下），并命名为backupDB，内容如下，主要实现功能: 通过mysqldump执行全库备份 删除指定天数之前的历史备份 将最新备份通过FTP上传到指定的备用服务器上","text":"自动备份脚本 在选定目录下编写以下文件（如放置到/home/backshell/scripts文件夹下），并命名为backupDB，内容如下，主要实现功能: 通过mysqldump执行全库备份 删除指定天数之前的历史备份 将最新备份通过FTP上传到指定的备用服务器上 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#! /bin/bash# 数据库参数项USER=数据库用户名PASSWORD=数据库密码DATABASE1=数据库名# 备份文件存放目录BACKUP_DIR=/data/backup/database/# 备份日志LOGFILE=/data/backup/database/data_backup.log# 备份档存放天数KEEPDAY=7# 备份文件命名规则DATE=$(date -d '-1 min' +%Y%m%d-%H%M)DUMPFILE1=$DATE-$DATABASE1.sqlARCHIVE1=$DUMPFILE1.tar.gz# 创建备份目录if [ ! -d $BACKUP_DIR ]; then mkdir -p \"$BACKUP_DIR\" fiecho -e \"\\n\" &gt;&gt; $LOGFILE echo \"------------------------------------\" &gt;&gt; $LOGFILE echo \"BACKUP DATE:$DATE\"&gt;&gt; $LOGFILE echo \"------------------------------------\" &gt;&gt; $LOGFILE# 执行备份echo $BACKUP_DIR /usr/bin/mysqldump -u$USER -p$PASSWORD $DATABASE1 &gt; $DUMPFILE1if [[ $? == 0 ]]; then tar czvf $ARCHIVE1 $DUMPFILE1 &gt;&gt; $LOGFILE 2&gt;&amp;1 echo \"$ARCHIVE1 BACKUP SUCCESSFUL!\" &gt;&gt; $LOGFILE mv $ARCHIVE1 $BACKUP_DIRrm -f $DUMPFILE1 else echo “$ARCHIVE1 Backup Fail!” &gt;&gt; $LOGFILE fi# 删除KEYPDAY之前的备份档,节省空间find $BACKUP_DIR -type f -mtime +$KEEPDAY -exec rm -f &#123;&#125; \\;echo \"$KEEPDAY DAYS AGO FILES HAS BEEN DELETE!\" &gt;&gt; $LOGFILE # 将备份档通过FTP传送到远程备份服务器# 以下[SERVERIP]、[USER]、[password]替换为实际的远程服务器#ftp -n&lt;&lt;!#open [SERVERIP]#user USER PASSWORD#binary#cd /www/wwwroot/backdir/#lcd $BACKUP_DIR#prompt#put $ARCHIVE1#close#bye#! 修改定时任务脚本，使备份自动定时执行： 打开/etc/crontab文件，修改如下（添加最后一行）： 123456789101112131415SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root# For details see man 4 crontabs# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed05 00 * * * root /home/bakshell/script/backupDB #每天凌晨0点01分执行数据库备份脚本 加密处理由于上述脚本中存在明文的账号密码等信息，存在一定的安全隐患，对 shell脚本进行加密就很必要了，下面用一种最简单的方式，gzexe工具。 1234# 加密gzexe backupDB# 解密gzexe -d backupDB 加密之后，会在同级目录生成一个~backpuDB的文件，该文件是原始的文件，而backupDB会被加密成密文件文件，打开会是一系列打乱后的编码。可以将~backupDB文件删除。这样可以应付一般的安全性需要了。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"},{"name":"定时备份","slug":"定时备份","permalink":"http://blog.e-ant.cn/tags/%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD/"}]},{"title":"Sonatype Nexus版本库升级方案","slug":"nexus-update","date":"2018-02-15T03:32:00.000Z","updated":"2020-04-25T09:40:10.508Z","comments":true,"path":"2018/02/15/nexus-update/","link":"","permalink":"http://blog.e-ant.cn/2018/02/15/nexus-update/","excerpt":"Sonatype Nexus版本库升级 下载免费的最新版本Sonatpte Nexus 安装JDK1.7.0_80 安装Tomcat7 配置/etc/profile，修改其中的JAVA_HOME及CATALINA_HOME配置，source /etc/profile立即生效","text":"Sonatype Nexus版本库升级 下载免费的最新版本Sonatpte Nexus 安装JDK1.7.0_80 安装Tomcat7 配置/etc/profile，修改其中的JAVA_HOME及CATALINA_HOME配置，source /etc/profile立即生效 如原来已经安装了Nexus，注意将/root/sonatype-work/nexus下的文件做个全量备份。 解压缩nexus-2.14.1-01-bundle.tar.gz nexus-2.14.1-01/lib目录下除javax..jar及jetty-.jar以外的jar包，复制到nexus-2.14.1-01/nexus/WEB-INF/lib目录下 再将nexus-2.14.1-01/nexus目录copy至tomcat7的webapps目录下 启动Tomcat7 Sonatype Nexus管理员密码丢失 Xshell连接上Nexus所在的服务器 通过find / -name &#39;security.xml&#39;命令，找到security.xml文件所在的目录 vim security.xml 编辑该文件，将anonymous用户的权限改为admin，保存。 找到nexus的tomcat启动目录，并重启nexus的tomcat服务。 1234567891011121314151617&lt;userRoleMapping&gt; &lt;userId&gt;anonymous&lt;/userId&gt; &lt;source&gt;default&lt;/source&gt; &lt;roles&gt; &lt;role&gt;anonymous&lt;/role&gt; &lt;role&gt;repository-any-read&lt;/role&gt; &lt;!--添加该项--&gt; &lt;role&gt;nx-admin&lt;/role&gt; &lt;/roles&gt;&lt;/userRoleMapping&gt;&lt;userRoleMapping&gt; &lt;userId&gt;admin&lt;/userId&gt; &lt;source&gt;default&lt;/source&gt; &lt;roles&gt; &lt;role&gt;nx-admin&lt;/role&gt; &lt;/roles&gt;&lt;/userRoleMapping&gt; 此时访问nexus首页，左侧看到的就是管理员的所有菜单。 找到Security－＞Users－＞admin右键-&gt;Set Password，重新设置一个admin用户的密码。 将原改动的security.xml文件还原，再次重新nexus的tomcat服务，此前就可以用admin账号的新密码重新正常登录了。","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"Maven私服","slug":"体系/Maven私服","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/Maven%E7%A7%81%E6%9C%8D/"}],"tags":[{"name":"Nexus","slug":"Nexus","permalink":"http://blog.e-ant.cn/tags/Nexus/"},{"name":"版本升级","slug":"版本升级","permalink":"http://blog.e-ant.cn/tags/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"}]},{"title":"MySQL常见问题处理","slug":"mysql-faq","date":"2017-06-15T02:30:00.000Z","updated":"2020-04-25T09:39:14.316Z","comments":true,"path":"2017/06/15/mysql-faq/","link":"","permalink":"http://blog.e-ant.cn/2017/06/15/mysql-faq/","excerpt":"MySQL安装完成后，远程无法访问，报1045错误解决方案： 1234mysql &gt; use mysql;mysql &gt; update user set password&#x3D;PASSWORD(&quot;new password&quot;) WHERE USER&#x3D;&quot;root&quot;;mysql &gt; flush privileges;mysql &gt; update user set host&#x3D;&quot;%&quot; where user&#x3D;&quot;root&quot; and host&#x3D;&quot;localhost&quot;;","text":"MySQL安装完成后，远程无法访问，报1045错误解决方案： 1234mysql &gt; use mysql;mysql &gt; update user set password&#x3D;PASSWORD(&quot;new password&quot;) WHERE USER&#x3D;&quot;root&quot;;mysql &gt; flush privileges;mysql &gt; update user set host&#x3D;&quot;%&quot; where user&#x3D;&quot;root&quot; and host&#x3D;&quot;localhost&quot;; ROOT密码忘记12345678# 输入以下命令,# 表示mysqld_safe进程存在,可以通过以下命令删除$ mysqld_safe --user&#x3D;mysql --skip-grant-tables --skip-networking &amp;# 登录$ mysql -u root mysql# 修改为新的密码mysql&gt; UPDATE user SET password&#x3D;PASSWORD(&quot;new password&quot;) WHERE user&#x3D;&#39;root&#39;;mysql&gt; FLUSH PRIVILEGES; 如果在执行： 1$ mysqld_safe --user&#x3D;mysql --skip-grant-tables --skip-networking &amp; 出现类似mysqld_safe A mysqld process already exists的提示，则可以通过下述命令先停止mysqld_safe进程 1234# 查看mysqld_safe进程IDps -A|grep mysql# 终结该进程,xxxx替换为上面查出来的进程号kill -9 xxxx 设置MySQL随机自启动 确保/etc/rc.d/init.d/mysql存在 若用service mysql start能够正常启动，表示服务已存在(若是通过rpm方式安装的，相应服务会自动在/etc/rc.d/init.d目录注册的) 检查在所有linux运行级别中，系统随机启动服务项的运行状态信息(on 或 off) 1chkconfig --list mysql 若未找到,添加服务 1chkconfig --addd mysql 设置相应运行级别开启随机启动功能 1chkconfig --level 2345 mysql on 重启mysql服务 1service mysql restart rpm方式安装后，让不到/etc/my.cnf的解决方法1cp /usr/share/mysql/my-medium.cnf /etc/my.cnf 查询MySQL中哪些表的数据量最大12mysql &gt; use information_schema; mysql&gt; select table_schema,table_name,table_rows from tables order by table_rows desc limit 10;","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"}]},{"title":"SSH升级方案【基于CentOS6版本】","slug":"centos6-ssh-upd","date":"2015-06-23T04:55:00.000Z","updated":"2020-04-25T09:41:00.320Z","comments":true,"path":"2015/06/23/centos6-ssh-upd/","link":"","permalink":"http://blog.e-ant.cn/2015/06/23/centos6-ssh-upd/","excerpt":"注意： 以下方案在centos6(查看方法：cat /etc/issue)版本下测试成功，其它版本未验证，谨慎操作。 建议直接在~目录下操作 务必严格按照下述步骤逐步执行 保险起见，以下升级步骤全部完成后，修改一次root密码，改成原来的密码 版本升级后，可以重启下服务器","text":"注意： 以下方案在centos6(查看方法：cat /etc/issue)版本下测试成功，其它版本未验证，谨慎操作。 建议直接在~目录下操作 务必严格按照下述步骤逐步执行 保险起见，以下升级步骤全部完成后，修改一次root密码，改成原来的密码 版本升级后，可以重启下服务器 升级步骤123456789101112cp -rf /etc/ssh /etc/ssh_bak# 以下语句,若出现提示信息时,全部选yyum install gcc openssl-devel pam-devel rpm-buildwget http://mirror.internode.on.net/pub/OpenBSD/OpenSSH/portable/openssh-7.2p2.tar.gztar -zxvf openssh-7.2p2.tar.gzcd openssh-7.2p2./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-zlib --with-md5-passwordsrm -rf /etc/sshmakemake install# 出现提示信息,选ycp contrib/redhat/sshd.init /etc/init.d/sshd 接着： 1vim /etc/ssh/sshd_config 查找PermitRootLogin，改成PermitRootLogin yes 查找#UsePAM no，改成UsePAM yes 12/etc/init.d/sshd reloadchkconfig --list|grep ssh","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"Linux系统","slug":"体系/Linux系统","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/Linux%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"http://blog.e-ant.cn/tags/CentOS/"},{"name":"ssh升级","slug":"ssh升级","permalink":"http://blog.e-ant.cn/tags/ssh%E5%8D%87%E7%BA%A7/"}]},{"title":"excel中从文件路径取文件名的快捷处理方案","slug":"excel01","date":"2009-09-17T11:16:00.000Z","updated":"2020-04-25T09:38:14.574Z","comments":true,"path":"2009/09/17/excel01/","link":"","permalink":"http://blog.e-ant.cn/2009/09/17/excel01/","excerpt":"在做软件开发，基本上写工作日志是每天必不可少的环节，每天都要整理当天所修改的文件列表，都要用到excel。最经常的情况就是从cvs上把已上传的文件路径copy下来，粘到excel中，然后再去切出文件名。资料少还受得了。资料多了，就算是采用查找替换，也是大费周折，实在是浪费时间，于是花了点儿心思，自已写了一个excel处理函数,将这部份的工作无私地奉献给excel处理。处理后，只要将mouse上下一拉，一切搞定.终于可以省心啦。","text":"在做软件开发，基本上写工作日志是每天必不可少的环节，每天都要整理当天所修改的文件列表，都要用到excel。最经常的情况就是从cvs上把已上传的文件路径copy下来，粘到excel中，然后再去切出文件名。资料少还受得了。资料多了，就算是采用查找替换，也是大费周折，实在是浪费时间，于是花了点儿心思，自已写了一个excel处理函数,将这部份的工作无私地奉献给excel处理。处理后，只要将mouse上下一拉，一切搞定.终于可以省心啦。 处理函数如下： 1fx=RIGHT(C2,LEN(C2)-SEARCH(\"@\",SUBSTITUTE(C2,\"/\",\"@\",LEN(C2)-LEN(SUBSTITUTE(C2,\"/\",\"\")))))","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"excel","slug":"excel","permalink":"http://blog.e-ant.cn/tags/excel/"},{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"DIY一款比较好用的批量转换工具【doc2HtmlTider】","slug":"doc2HtmlTider","date":"2009-08-23T10:35:00.000Z","updated":"2020-04-25T09:40:39.782Z","comments":true,"path":"2009/08/23/doc2HtmlTider/","link":"","permalink":"http://blog.e-ant.cn/2009/08/23/doc2HtmlTider/","excerpt":"在自已平时开发过程中很，经常需要做一些非常繁琐的事情，比如编写操作手册。操作手册有多种格式，我最经常见格式的就是pdf、chm或htm等。这里只针对htm作一些优化。 通常Microsoft office本身有提供word转换成html文件的功能，不过无法进行批次转换,效率上不高。这里推荐使用doctohtml.exe这款工具，需要download的可以参考这里doc2Html.exe.。 这款工具软件的优点是替换速度快，但是产生出来的html文件又臭又长，整合后整个操作手册变得非常大。想想还是自已动手丰衣足食，于是我花了点时间写了个简单的优化工具。经测试，用它可以将产生后的文件缩减至原来的60%左右。效果还是看得见的。","text":"在自已平时开发过程中很，经常需要做一些非常繁琐的事情，比如编写操作手册。操作手册有多种格式，我最经常见格式的就是pdf、chm或htm等。这里只针对htm作一些优化。 通常Microsoft office本身有提供word转换成html文件的功能，不过无法进行批次转换,效率上不高。这里推荐使用doctohtml.exe这款工具，需要download的可以参考这里doc2Html.exe.。 这款工具软件的优点是替换速度快，但是产生出来的html文件又臭又长，整合后整个操作手册变得非常大。想想还是自已动手丰衣足食，于是我花了点时间写了个简单的优化工具。经测试，用它可以将产生后的文件缩减至原来的60%左右。效果还是看得见的。 在Visual Studio 2005中 先新建一个WinForm工程,打开Form1.cs,先在view画面上拉两个textbox元件,三个按钮元件,两个label标签 第一个textbox元件textbox1用来取得待替换文件夹路径,配上一个label标签Lable1”待替换文件夹”作为说明,第二个textbox元件textbox2作为替换进度列表显示,设置为Multiline模式,配上另一个Label标签Label2”替换进度”作为说明;另外,三个按钮元件:第一个按钮Button1用来开启文件夹浏览器,第二个按钮Button2用来执行替换动作,第三个按钮Button3用来关闭窗体.Form1.cs[Design]画面结果如下图所示: 然后将其切换至code页面,编辑代码如下: Form1.cs 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201&#x2F;** * &lt;P&gt; Title: 常用工具包 &lt;&#x2F;P&gt; * &lt;P&gt; Description: htm标签清理工具 &lt;P&gt; * &lt;P&gt; Copyright: Copyright (c) 2009-05-04 &lt;&#x2F;P&gt; * @author 一只蚂蚁 * @version 0.1 Original Design from design document. *&#x2F;using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Text;using System.Windows.Forms;using System.IO;using System.Collections;using System.Text.RegularExpressions;namespace HtmlTidier&#123; public partial class Form1 : Form &#123; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 建构方法 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; public Form1() &#123; InitializeComponent(); &#x2F;&#x2F;readonly this.textBox1.ReadOnly &#x3D; true; &#125; &#x2F;&#x2F;待替换文件夾 private string _folder; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 取得待替换文件夹路径 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;按钮物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; private void button1_Click(object sender, EventArgs e) &#123; &#x2F;&#x2F;开启文件夹浏览器 FolderBrowserDialog path &#x3D; new FolderBrowserDialog(); path.ShowDialog(); this.textBox1.Text &#x3D; path.SelectedPath; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 执行替换 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; public void doReplace() &#123; &#x2F;&#x2F;刪除所有png档案 string[] fileLists &#x3D; Directory.GetFiles(_folder, @&quot;*.png&quot;, SearchOption.AllDirectories); foreach ( string newFile in fileLists ) &#123; &#x2F;&#x2F;执行 File.Delete(newFile); doShow(newFile, &quot;已删除!&quot;); &#x2F;&#x2F;updata panel this.Update(); &#125; &#x2F;&#x2F;删除fileList.xml中的png图片结点 fileLists &#x3D; Directory.GetFiles(_folder, @&quot;*.xml&quot;, SearchOption.AllDirectories); foreach ( string newFile in fileLists ) &#123; string s &#x3D; ReadFile(newFile); WriteFile(newFile, doXMLReplace(s)); doShow(newFile, &quot;已替换完成!&quot;); &#x2F;&#x2F;update panel this.Update(); &#125; &#x2F;&#x2F;清理htm文件 fileLists &#x3D; Directory.GetFiles(_folder, @&quot;*.htm&quot;, SearchOption.AllDirectories); foreach ( string newFile in fileLists ) &#123; string s &#x3D; ReadFile(newFile); WriteFile(newFile, doHtmlReplace(s)); doShow(newFile, &quot;已替换完成!&quot;); &#x2F;&#x2F;update panel this.Update(); &#125; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 实时显示 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;_path&quot;&gt;文件路径&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;mess&quot;&gt;提示信息&lt;&#x2F;param&gt; public void doShow(string _path,string mess) &#123; this.textBox2.Text &#x3D; _path + mess + &quot;&#x2F;r&#x2F;n&quot; + this.textBox2.Text; this.textBox2.ScrollToCaret(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 执行替换动作 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;按钮物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; private void button2_Click(object sender, EventArgs e) &#123; _folder &#x3D; this.textBox1.Text; &#x2F;&#x2F;文件夾為空 if ( string.IsNullOrEmpty(_folder) ) &#123; MessageBox.Show(&quot;请选择待替换文件夹!&quot;, &quot;提示!&quot;); return; &#125; &#x2F;&#x2F;替換 doReplace(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; htm标签替换 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;s&quot;&gt;待替换的内容&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;returns&gt;替换后的内容&lt;&#x2F;returns&gt; public string doHtmlReplace(string s) &#123; &#x2F;&#x2F;s &#x3D; s.Replace(&quot;待處理表單操作手冊&quot;, &quot;&quot;); s &#x3D; Regex.Replace(s, @&quot;&lt;!--&#x2F;[if gte vml 1&#x2F;][^!]+&lt;!&#x2F;[endif&#x2F;]--&gt;&quot;, &quot;&quot;); s &#x3D; Regex.Replace(s, @&quot;&lt;!&#x2F;[if !vml&#x2F;]&gt;&quot;, &quot;&quot;); s &#x3D; Regex.Replace(s, @&quot;&#x2F;&quot;&quot;&gt;&lt;!&#x2F;[endif&#x2F;]&gt;&quot;, &quot;&#x2F;&quot;&gt;&quot;); return s; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; fileList.xml替换 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;s&quot;&gt;待替换的内容&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;returns&gt;替换后的内容&lt;&#x2F;returns&gt; public string doXMLReplace(string s) &#123; return Regex.Replace(s, @&quot;&lt;o:File[^&gt;]+png[^&gt;]+&gt;&#x2F;s+&quot;, &quot;&quot;); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 关闭窗口 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;sender&quot;&gt;按钮物件&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;e&quot;&gt;事件&lt;&#x2F;param&gt; private void button3_Click(object sender, EventArgs e) &#123; this.Close(); &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 读文件 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Path&quot;&gt;文件路径&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;returns&gt;文件内容&lt;&#x2F;returns&gt; private string ReadFile(string _path) &#123; string s &#x3D; &quot;&quot;; &#x2F;&#x2F;不存在 if ( !File.Exists(_path) ) &#123; s &#x3D; &quot;不存在相应的目录&quot;; &#125; else &#123; StreamReader f2 &#x3D; new StreamReader(_path, Encoding.GetEncoding(&quot;big5&quot;)); s &#x3D; f2.ReadToEnd(); f2.Close(); f2.Dispose(); &#125; &#x2F;&#x2F;返回 return s; &#125; &#x2F;&#x2F;&#x2F; &lt;summary&gt; &#x2F;&#x2F;&#x2F; 写文件 &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Path&quot;&gt;文件路径&lt;&#x2F;param&gt; &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Strings&quot;&gt;文件内容&lt;&#x2F;param&gt; private void WriteFile(string _path, string content) &#123; &#x2F;&#x2F;不存在 if ( !File.Exists(_path) ) &#123; FileStream f &#x3D; File.Create(_path); f.Close(); f.Dispose(); &#125; &#x2F;&#x2F;StreamWriter StreamWriter f2 &#x3D; new StreamWriter(_path, false, Encoding.GetEncoding(&quot;big5&quot;)); f2.WriteLine(content); f2.Close(); f2.Dispose(); &#125; &#125;&#125; 编译=&gt;运行….bingo!!!","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"},{"name":"批量转换","slug":"批量转换","permalink":"http://blog.e-ant.cn/tags/%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2/"},{"name":"C#","slug":"C","permalink":"http://blog.e-ant.cn/tags/C/"}]},{"title":"常用的注册码及序列号","slug":"sncode","date":"2009-08-22T19:55:00.000Z","updated":"2020-04-25T09:42:45.337Z","comments":true,"path":"2009/08/23/sncode/","link":"","permalink":"http://blog.e-ant.cn/2009/08/23/sncode/","excerpt":"这些都是本人平时作开发的过程中需要用到的一部份软件，开源才是真理，感谢部份网友无私地提供注册码，现将其整理如下:","text":"这些都是本人平时作开发的过程中需要用到的一部份软件，开源才是真理，感谢部份网友无私地提供注册码，现将其整理如下: EditPlus注册码:Name:crskyCode:7879E-5BF58-7DR23-DAOB2-7DR30 UltraEdit32 v13.10版注冊码Name:6个空格 (注意是空格)Code:K8Q1A-V1N5Z-X4G1Y-K0F4G-H8D56-15H8y UltraCompare Profession v6注冊码Name：3ddownCode：NXLH3-IMPMD-JINOI-RKTHM-NGFLC-GHKFV-DSQLO-GDOV6 Visual CHM 4.10(或者3.10版本)注册版注册码：Name:zhucemaCode:IHIDRWELLS VMware Workstation序列號:5.5版YLT64-MKFFG-8A1DY-4M8ZKLCT4T-24GFE-A816V-4MTQQHKXHD-KUN0G-HA5DF-4MTZ2 6.0版A8HC7-1GGR0-E4PD4-4T694YLT64-MKFFG-8A1DY-4M8ZK BB FlashBack Pro 2.62版(录像制作专家)下载地址Name : 任意code:2SX72-MIG9C-NX5V3-S4TL3-4B4V","categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"注册码","slug":"注册码","permalink":"http://blog.e-ant.cn/tags/%E6%B3%A8%E5%86%8C%E7%A0%81/"},{"name":"序列号","slug":"序列号","permalink":"http://blog.e-ant.cn/tags/%E5%BA%8F%E5%88%97%E5%8F%B7/"}]}],"categories":[{"name":"体系","slug":"体系","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/"},{"name":"常用工具","slug":"体系/常用工具","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"},{"name":"数据库","slug":"体系/数据库","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Maven私服","slug":"体系/Maven私服","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/Maven%E7%A7%81%E6%9C%8D/"},{"name":"Linux系统","slug":"体系/Linux系统","permalink":"http://blog.e-ant.cn/categories/%E4%BD%93%E7%B3%BB/Linux%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Hexo博客搭建","slug":"Hexo博客搭建","permalink":"http://blog.e-ant.cn/tags/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"Next主题","slug":"Next主题","permalink":"http://blog.e-ant.cn/tags/Next%E4%B8%BB%E9%A2%98/"},{"name":"Nginx","slug":"Nginx","permalink":"http://blog.e-ant.cn/tags/Nginx/"},{"name":"MySQL","slug":"MySQL","permalink":"http://blog.e-ant.cn/tags/MySQL/"},{"name":"定时备份","slug":"定时备份","permalink":"http://blog.e-ant.cn/tags/%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD/"},{"name":"Nexus","slug":"Nexus","permalink":"http://blog.e-ant.cn/tags/Nexus/"},{"name":"版本升级","slug":"版本升级","permalink":"http://blog.e-ant.cn/tags/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"},{"name":"CentOS","slug":"CentOS","permalink":"http://blog.e-ant.cn/tags/CentOS/"},{"name":"ssh升级","slug":"ssh升级","permalink":"http://blog.e-ant.cn/tags/ssh%E5%8D%87%E7%BA%A7/"},{"name":"excel","slug":"excel","permalink":"http://blog.e-ant.cn/tags/excel/"},{"name":"工具","slug":"工具","permalink":"http://blog.e-ant.cn/tags/%E5%B7%A5%E5%85%B7/"},{"name":"批量转换","slug":"批量转换","permalink":"http://blog.e-ant.cn/tags/%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2/"},{"name":"C#","slug":"C","permalink":"http://blog.e-ant.cn/tags/C/"},{"name":"注册码","slug":"注册码","permalink":"http://blog.e-ant.cn/tags/%E6%B3%A8%E5%86%8C%E7%A0%81/"},{"name":"序列号","slug":"序列号","permalink":"http://blog.e-ant.cn/tags/%E5%BA%8F%E5%88%97%E5%8F%B7/"}]}